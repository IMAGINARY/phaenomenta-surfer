{"mappings":"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","sources":["node_modules/toolcool-range-slider/src/core/templates/main.html.js","node_modules/toolcool-range-slider/src/core/enums/attributes-enum.ts","node_modules/toolcool-range-slider/src/core/enums/type-enum.ts","node_modules/toolcool-range-slider/src/core/domain/math-provider.ts","node_modules/toolcool-range-slider/src/core/ui/pointer.ts","node_modules/toolcool-range-slider/src/core/enums/css-vars-enum.ts","node_modules/toolcool-range-slider/src/core/domain/common-provider.ts","node_modules/toolcool-range-slider/src/core/ui/styles.ts","node_modules/toolcool-range-slider/src/core/enums/css-classes-enum.ts","node_modules/toolcool-range-slider/src/core/domain/pointers-provider.ts","node_modules/toolcool-range-slider/src/core/ui/slider.ts","node_modules/toolcool-range-slider/src/core/app/range-slider.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/CindyJS.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/polynomial-interpolation.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-639669d5d71e916a.js","node_modules/toolcool-range-slider/src/core/domain/events-provider.ts","node_modules/toolcool-range-slider/src/core/dal/data-provider.ts","node_modules/toolcool-range-slider/src/core/ui/panel-fill.ts","node_modules/toolcool-range-slider/src/core/plugins/plugins-manager.ts","node_modules/toolcool-range-slider/src/core/domain/attributes-provider.ts","node_modules/toolcool-range-slider/src/core/index.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/montag.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/surfer-core-gpu.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-4d1d9544effd53de.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-32df0cad799c97f3.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-a2d0750ae3d08ab7.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-2eef9c0359ba2a11.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/index.ts","node_modules/@parcel/runtime-js/lib/runtime-2919ada6ffb40d77.js","src/main.ts"],"sourcesContent":["export default (styles, linkHrefs) => { return ` ${ linkHrefs && linkHrefs.length > 0 ? linkHrefs.map(linkHref => `<link rel=\"stylesheet\" href=\"${ linkHref }\" />`).join('') : '' } <style> ${styles} </style> <div class=\"range-slider-box\"> <div class=\"row\"> <div id=\"range-slider\" class=\"range-slider\"> <div class=\"container\"> <div class=\"panel\"></div> <div class=\"panel-fill\"></div> <div class=\"container\"> <div class=\"pointer\" tabindex=\"0\" role=\"slider\"> <div class=\"pointer-shape\"></div> </div> </div> </div> </div> </div> </div>`; }; ","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const PointersOverlap = 'pointers-overlap';\nexport const PointersMinDistance = 'pointers-min-distance';\nexport const PointersMaxDistance = 'pointers-max-distance';\nexport const RangeDragging = 'range-dragging';\n\nexport const Data = 'data';\nexport const Min = 'min';\nexport const Max = 'max';\nexport const Step = 'step';\nexport const Round = 'round';\nexport const Type = 'type';\nexport const Theme = 'theme';\nexport const RightToLeft = 'rtl';\nexport const BottomToTop = 'btt';\n\nexport const Disabled = 'disabled';\nexport const KeyboardDisabled = 'keyboard-disabled';\n\nexport const SliderWidth = 'slider-width';\nexport const SliderHeight = 'slider-height';\nexport const SliderRadius = 'slider-radius';\n\nexport const SliderBg = 'slider-bg';\nexport const SliderBgHover = 'slider-bg-hover';\nexport const SliderBgFill = 'slider-bg-fill';\n\nexport const PointerWidth = 'pointer-width';\nexport const PointerHeight = 'pointer-height';\nexport const PointerRadius = 'pointer-radius';\nexport const PointerBg = 'pointer-bg';\nexport const PointerBgHover = 'pointer-bg-hover';\nexport const PointerBgFocus = 'pointer-bg-focus';\nexport const PointerShadow = 'pointer-shadow';\nexport const PointerShadowHover = 'pointer-shadow-hover';\nexport const PointerShadowFocus = 'pointer-shadow-focus';\nexport const PointerBorder = 'pointer-border';\nexport const PointerBorderHover = 'pointer-border-hover';\nexport const PointerBorderFocus = 'pointer-border-focus';\n\nexport const AnimateOnClick = 'animate-onclick';\nexport const CSSLinks = 'css-links';\n","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const Vertical = 'vertical';\nexport const Horizontal = 'horizontal';\n","/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n","import * as TypeEnum from '../enums/type-enum';\nimport { sendOnKeyDownEvent, sendPointerClickedEvent } from '../domain/events-provider';\n\nexport interface IPointer {\n  readonly percent: number;\n  readonly $pointer: HTMLElement;\n\n  updatePosition: (percent: number, leftWall: number | undefined, rightWall: number | undefined, type: string, rightToLeft: boolean, bottomToTop: boolean) => void;\n\n  disabled: boolean;\n\n  isClicked: ($target: HTMLElement) => boolean;\n  setCallbacks: (\n    arrowLeft: (pointerIndex: number) => void,\n    arrowRight: (pointerIndex: number) => void,\n    arrowUp: (pointerIndex: number) => void,\n    arrowDown: (pointerIndex: number) => void\n  ) => void;\n\n  setAttr: (key: string, value: string | null | undefined) => void;\n  getAttr: (key: string) => string | null;\n\n  destroy: () => void;\n}\n\nexport const Pointer = ($component: HTMLElement, $pointer: HTMLElement, index: number) : IPointer => {\n\n  // the pointer value in % in the range [0, 100] -\n  // used to render the pointer position\n  let percent = 0;\n\n  let arrowLeft: (pointerIndex: number) => void;\n  let arrowRight: (pointerIndex: number) => void;\n  let arrowUp: (pointerIndex: number) => void;\n  let arrowDown: (pointerIndex: number) => void;\n\n  let disabled = false;\n\n  // -------------- APIs -------------------------\n  const updatePosition = (_percent: number, _leftWall: number | undefined, _rightWall: number | undefined, _type: string, _rightToLeft: boolean, _bottomToTop: boolean) => {\n    if(_rightWall !== undefined && _percent > _rightWall){\n      _percent = _rightWall;\n    }\n\n    if(_leftWall !== undefined && _percent < _leftWall){\n      _percent = _leftWall;\n    }\n\n    percent = _percent;\n    // $pointer.focus();\n\n    // the below code should not change the global pointer percent,\n    // only its position on the panel\n    let percentPos = percent;\n    if((_type === TypeEnum.Vertical && _bottomToTop) ||\n      (_type === TypeEnum.Horizontal && _rightToLeft)) {\n      percentPos = 100 - percentPos;\n    }\n\n    if (_type === TypeEnum.Vertical) {\n      $pointer.style.top = `${ percentPos }%`;\n    }\n    else {\n      $pointer.style.left = `${ percentPos }%`;\n    }\n  };\n\n  const isClicked = ($target: HTMLElement) => {\n    return $target === $pointer || $pointer.contains($target);\n  };\n\n  const setCallbacks = (\n    _arrowLeft: (pointerIndex: number) => void,\n    _arrowRight: (pointerIndex: number) => void,\n    _arrowUp: (pointerIndex: number) => void,\n    _arrowDown: (pointerIndex: number) => void\n  ) => {\n    arrowLeft = _arrowLeft;\n    arrowRight = _arrowRight;\n    arrowUp = _arrowUp;\n    arrowDown = _arrowDown;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $pointer.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $pointer.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($pointer.hasAttribute('aria-disabled')) {\n        $pointer.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setAttr = (key: string, value: string | null | undefined) => {\n    if(value === null || value === undefined){\n      $pointer.removeAttribute(key);\n    }\n    else{\n      $pointer.setAttribute(key, value);\n    }\n  };\n\n  const getAttr = (key: string) => {\n    return $pointer.getAttribute(key);\n  };\n\n  // -------------- Events ------------------------\n\n  const pointerKeyDown = (evt: KeyboardEvent) => {\n    if(disabled) return;\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        if(typeof arrowLeft === 'function'){\n          arrowLeft(index);\n        }\n        break;\n      }\n\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if(typeof arrowRight === 'function'){\n          arrowRight(index);\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        evt.preventDefault();\n        if(typeof arrowUp === 'function'){\n          arrowUp(index);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        if(typeof arrowDown === 'function'){\n          arrowDown(index);\n        }\n        break;\n      }\n    }\n\n    sendOnKeyDownEvent($component, evt);\n  };\n\n  const pointerClicked = () => {\n    if(disabled) return;\n    sendPointerClickedEvent($component, $pointer);\n  };\n\n  // ---------- Lifecycle ------------------------\n\n  (() => {\n    $pointer.className = `pointer pointer-${ index }`;\n\n    $pointer.addEventListener('keydown', pointerKeyDown);\n    $pointer.addEventListener('click', pointerClicked);\n  })();\n\n  const destroy = () => {\n    $pointer.removeEventListener('keydown', pointerKeyDown);\n    $pointer.removeEventListener('click', pointerClicked);\n    $pointer.remove();\n  };\n\n  return {\n    $pointer,\n\n    get percent() {\n      return percent;\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    updatePosition,\n\n    isClicked,\n    setCallbacks,\n    setAttr,\n    getAttr,\n\n    destroy,\n  };\n};\n\n","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = '--animate-onclick';\nexport const SliderWidth = '--width';\nexport const SliderHeight = '--height';\nexport const SliderRadius = '--panel-bg-border-radius';\n\nexport const SliderBg = '--panel-bg';\nexport const SliderBgHover = '--panel-bg-hover';\nexport const SliderBgFill = '--panel-bg-fill';\n\nexport const PointerWidth = '--pointer-width';\nexport const PointerHeight = '--pointer-height';\nexport const PointerRadius = '--pointer-border-radius';\nexport const PointerBg = '--pointer-bg';\nexport const PointerBgHover = '--pointer-bg-hover';\nexport const PointerBgFocus = '--pointer-bg-focus';\nexport const PointerShadow = '--pointer-shadow';\nexport const PointerShadowHover = '--pointer-shadow-hover';\nexport const PointerShadowFocus = '--pointer-shadow-focus';\nexport const PointerBorder = '--pointer-border';\nexport const PointerBorderHover = '--pointer-border-hover';\nexport const PointerBorderFocus = '--pointer-border-focus';\n","import * as AttributesEnum from '../enums/attributes-enum';\nimport { getNumber } from './math-provider';\n\nexport const getAttributesByRegex = <T>($component: HTMLElement, regex: RegExp, parseValue?: (val: string) => T) : Map<number, T> => {\n\n  const map = new Map<number, T>();\n\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace(/\\D/g, '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = parseValue && typeof parseValue === 'function' ? parseValue(attr.value) : attr.value;\n    map.set(keyNum, value as T);\n  }\n\n  return map;\n};\n\nexport const getExternalCSSList = ($component: HTMLElement) => {\n  if(!$component) return null;\n\n  const str = $component.getAttribute(AttributesEnum.CSSLinks);\n  if(!str) return null;\n\n  const parts = str.split(';');\n  const cssList: string[] = [];\n\n  for(const part of parts){\n    if(part.trim() === '') continue;\n    cssList.push(part.trim());\n  }\n\n  return cssList;\n};","import * as AttributesEnum from '../enums/attributes-enum';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport { IPointer } from './pointer';\nimport { getAttributesByRegex } from '../domain/common-provider';\n\nexport interface IStyles {\n\n  setStyle: (key: string, value: string | null | undefined, index: number) => void;\n  getStyle: (key: string, index: number) => string | undefined;\n\n  theme: string | null;\n  readonly pointerShapes: (string | null)[];\n  setPointerShape: (index: number, value: string | null) => void;\n}\n\nexport const stylePropertiesList: [string, string, string, RegExp | null][] = [\n  [CSSVariables.SliderWidth, AttributesEnum.SliderWidth, 'sliderWidth', null],\n  [CSSVariables.SliderHeight, AttributesEnum.SliderHeight, 'sliderHeight', null],\n  [CSSVariables.SliderRadius, AttributesEnum.SliderRadius, 'sliderRadius', null],\n\n  [CSSVariables.SliderBg, AttributesEnum.SliderBg, 'sliderBg', null],\n  [CSSVariables.SliderBgHover, AttributesEnum.SliderBgHover, 'sliderBgHover', null],\n  [CSSVariables.SliderBgFill, AttributesEnum.SliderBgFill, 'sliderBgFill', null],\n\n  [CSSVariables.PointerWidth, AttributesEnum.PointerWidth, 'pointer#Width', /^pointer([0-9]*)-width$/], // pointer-width, pointer2-width, ...\n  [CSSVariables.PointerHeight, AttributesEnum.PointerHeight, 'pointer#Height', /^pointer([0-9]*)-height$/], // pointer-height$, pointer2-height, ...\n  [CSSVariables.PointerRadius, AttributesEnum.PointerRadius, 'pointer#Radius', /^pointer([0-9]*)-radius$/], // pointer-radius, pointer2-radius, ...\n  [CSSVariables.PointerBg, AttributesEnum.PointerBg, 'pointer#Bg', /^pointer([0-9]*)-bg$/], // pointer-bg, pointer2-bg, ...\n  [CSSVariables.PointerBgHover, AttributesEnum.PointerBgHover, 'pointer#BgHover', /^pointer([0-9]*)-bg-hover$/], // pointer-bg-hover, pointer2-bg-hover, ...\n  [CSSVariables.PointerBgFocus, AttributesEnum.PointerBgFocus, 'pointer#BgFocus', /^pointer([0-9]*)-bg-focus$/], // pointer-bg-focus, pointer2-bg-focus, ...\n  [CSSVariables.PointerShadow, AttributesEnum.PointerShadow, 'pointer#Shadow', /^pointer([0-9]*)-shadow$/], // pointer-shadow, pointer2-shadow, ...\n  [CSSVariables.PointerShadowHover, AttributesEnum.PointerShadowHover, 'pointer#ShadowHover', /^pointer([0-9]*)-shadow-hover$/], // pointer-shadow-hover, pointer2-shadow-hover, ...\n  [CSSVariables.PointerShadowFocus, AttributesEnum.PointerShadowFocus, 'pointer#ShadowFocus', /^pointer([0-9]*)-shadow-focus$/], // pointer-shadow-focus, pointer2-shadow-focus, .\n  [CSSVariables.PointerBorder, AttributesEnum.PointerBorder, 'pointer#Border', /^pointer([0-9]*)-border$/], // pointer-border, pointer2-border, ...\n  [CSSVariables.PointerBorderHover, AttributesEnum.PointerBorderHover, 'pointer#BorderHover', /^pointer([0-9]*)-border-hover$/], // pointer-border-hover, pointer2-border-hover, ...\n  [CSSVariables.PointerBorderFocus, AttributesEnum.PointerBorderFocus, 'pointer#BorderFocus', /^pointer([0-9]*)-border-focus$/], // pointer-border-focus, pointer2-border-focus, ...\n];\n\nexport const Styles = ($component: HTMLElement, $slider: HTMLElement, pointers: IPointer[]) : IStyles => {\n\n  let theme: string | null = null;\n  const pointerShapes: (string | null)[] = [];\n  const stylesMap: Map<string, string> = new Map();\n\n  // ----- SETTERS ---------------------------\n\n  const removeClassesStartWith = (prefix: string, $element = $slider) => {\n    const classList = [...$element.classList];\n    for(const className of classList){\n      if(className.startsWith(prefix)){\n        $slider.classList.remove(className);\n      }\n    }\n  };\n\n  const removeClasses = () => {\n    // remove shape classes from $slider\n    removeClassesStartWith('shape');\n\n    // remove shape classes from pointers (if there are any)\n    const $pointers = $slider.querySelectorAll('.pointer');\n    for(const $pointer of $pointers){\n      removeClassesStartWith('shape', $pointer as HTMLElement);\n    }\n  };\n\n  const setTheme = (val: string | null) => {\n    theme = val;\n    removeClassesStartWith('theme-');\n\n    if(typeof val === 'string'){\n      $slider.classList.add(`theme-${ val }`);\n    }\n  };\n\n  const updatePointerShapes = () => {\n    removeClasses();\n\n    if(pointerShapes.length <= 0) return;\n\n    // first shape is added to the slider, as it should be applied on all pointers (potentially)\n    $slider.classList.add('shape', `shape-${ pointerShapes[0] }`);\n\n    // other shapes should be added to the relevant pointers each;\n    for(let i=1; i<pointerShapes.length; i++){\n      const item = pointerShapes[i];\n      if(!item) continue;\n\n      const $pointer = $slider.querySelector(`.pointer-${ i }`);\n      if(!$pointer) continue;\n\n      $pointer.classList.add('shape', `shape-${ item }`);\n    }\n  };\n\n  const setPointerShape = (index: number, value: string) => {\n    pointerShapes[index] = value;\n    updatePointerShapes();\n  };\n\n  const setPointerShapes = () => {\n\n    removeClasses();\n\n    // pointer-shape, pointer2-shape, ...\n    const list = getAttributesByRegex($component, /^pointer([0-9]*)-shape$/);\n    if(list.size <= 0) return;\n\n    // save shapes to the list that can be used for the getter APIs later\n    for(const item of list){\n      const index = item[0] as number;\n      pointerShapes[index] = item[1] as string;\n    }\n\n    updatePointerShapes();\n  };\n\n  const getKey = (key: string, index: number) => {\n    return `${ key }-${ index }`;\n  };\n\n  const setStyle = (key: string, value: string | null | undefined, index: number) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    const $styleHolder = index === 0 ? $slider : pointer.$pointer;\n\n    if(value === null || value === undefined){\n      if(stylesMap.has(getKey(key, index))){\n        stylesMap.delete(getKey(key, index));\n      }\n      $styleHolder.style.removeProperty(key);\n      return;\n    }\n\n    stylesMap.set(getKey(key, index), value);\n    $styleHolder.style.setProperty(key, value);\n  };\n\n  const getStyle = (key: string, index: number) => {\n    return stylesMap.get(getKey(key, index));\n  };\n\n  // ---- initialization ---------------------\n  (() => {\n\n    for(const item of stylePropertiesList){\n\n      // '--pointer-width', 'pointer-width', 'pointerWidth', regex or null\n      const [cssVariableName, attrName, apiProperty, regex] = item;\n\n      // apply the styles via CSS variables;\n      // if index = 0 ---> apply the style on the whole slider, so all\n      // pointers will inherit it;\n      // otherwise, apply styles on the individual pointers;\n      if(regex){\n        const list = getAttributesByRegex($component, regex);\n        for(const item of list){\n          const index = item[0];\n          const value = item[1] as string;\n          setStyle(cssVariableName, value, index);\n        }\n      }\n      else{\n        const cssVariableValue = $component.getAttribute(attrName);\n        setStyle(cssVariableName, cssVariableValue, 0);\n      }\n\n      // add APIs --------------------------\n      const apiProperties: [string, number][] = [];\n\n      if(apiProperty.indexOf('#') === -1){\n        apiProperties.push([apiProperty, 0]);\n      }\n      else{\n        apiProperties.push([apiProperty.replace('#', ''), 0]);\n        apiProperties.push([apiProperty.replace('#', '0'), 0]);\n        apiProperties.push([apiProperty.replace('#', '1'), 0]);\n        for(let i=1; i<pointers.length; i++){\n          apiProperties.push([apiProperty.replace('#', (i + 1).toString()), i]);\n        }\n      }\n\n      for(const item of apiProperties){\n        try{\n          const propName = item[0];\n          const index = item[1];\n\n          if(!Object.prototype.hasOwnProperty.call($component, propName)){\n            Object.defineProperty($component, propName, {\n              get () {\n                return getStyle(cssVariableName, index);\n              },\n\n              set: (val) => {\n                setStyle(cssVariableName, val, index);\n              },\n            });\n          }\n        }\n        catch (ex){\n          console.error(ex);\n        }\n      }\n    }\n\n    setTheme($component.getAttribute(AttributesEnum.Theme));\n    setPointerShapes();\n  })();\n\n  return {\n    setStyle,\n    getStyle,\n\n    get theme() {\n      return theme;\n    },\n\n    set theme(val){\n      setTheme(val);\n    },\n\n    get pointerShapes() {\n      return pointerShapes;\n    },\n\n    setPointerShape,\n  };\n};","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = 'animate-on-click';\nexport const RangeDragging = 'range-dragging';\n","import { getNumber, isNumber } from './math-provider';\nimport { IPointer, Pointer } from '../ui/pointer';\nimport { ISlider } from '../ui/slider';\n\nexport const MAX_VALUES_API = 10;\n\nexport const initPointers = ($component: HTMLElement, $pointer: HTMLElement) => {\n  const map = new Map<number, number | string>();\n  const regex = /^value([0-9]*)$/;\n\n  // collect data about key / value pairs: value=50, value2=70, etc.\n  // value = value0 = value1 (all these are aliases of each other)\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace('value', '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = isNumber(attr.value) ? getNumber(attr.value, 0) : attr.value;\n\n    map.set(keyNum, value);\n  }\n\n  // find the max value number in the map\n  const max = Math.max(...Array.from(map.keys()));\n  const pointers: [IPointer, string | number | undefined][] = [];\n\n  // first pointer always exists\n  pointers.push([Pointer($component, $pointer, 0), map.get(0)]);\n\n  // add all other pointers\n  let $latestPointer = $pointer;\n\n  for(let i=1; i<=max; i++){\n    const $newPointer = $pointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n\n    $latestPointer = $newPointer;\n    pointers.push([Pointer($component, $newPointer, i), map.get(i)]);\n  }\n\n  return pointers;\n};\n\nexport const initPointerAPI = (\n  $component: HTMLElement,\n  slider: ISlider,\n  index: number,\n  valueProp: string,\n  ariaLabelProp: string,\n  pointerShapeProp: string,\n  pointerDisabledProp: string\n) => {\n\n  try{\n\n    // `value${ index + 1 }`: value, value0, value1, value2, etc.\n    Object.defineProperty($component, valueProp, {\n      configurable: true,\n      get () {\n        if(!slider) return undefined;\n\n        const pointer = slider.pointers[index];\n        if(!pointer) return undefined;\n\n        const val = slider.getTextValue(pointer.percent);\n        return isNumber(val) ? getNumber(val, val) : val;\n      },\n\n      set: (val) => {\n        const pointer = slider.pointers[index];\n        if(!pointer){\n          slider?.addPointer(val);\n        }\n        else{\n          slider?.setValue(val, index);\n        }\n      },\n    });\n\n    // `ariaLabel${ index + 1 }`\n    Object.defineProperty($component, ariaLabelProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index]?.getAttr('aria-label') ?? undefined;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n        slider.setAriaLabel(index, val);\n      },\n    });\n\n    // `pointerShape${ index + 1 }`\n    Object.defineProperty($component, pointerShapeProp, {\n      configurable: true,\n      get () {\n        return slider?.styles?.pointerShapes[index] ?? null;\n      },\n\n      set: (val) => {\n        if(!slider || !slider.styles) return;\n        slider.styles.setPointerShape(index, val);\n      },\n    });\n\n    // `pointer${ index + 1 }Disabled`\n    Object.defineProperty($component, pointerDisabledProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index].disabled ?? false;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n\n        const pointer = slider?.pointers[index];\n        if(!pointer) return;\n\n        pointer.disabled = val;\n      },\n    });\n  }\n  catch (ex){\n    console.error(ex);\n  }\n};\n\nexport const initPointerAPIs = ($component: HTMLElement, slider: ISlider) => {\n\n  const apiProperties: [string, string, string, string, number][] = [\n    ['value', 'ariaLabel', 'pointerShape', 'pointerDisabled', 0],\n    ['value0', 'ariaLabel0', 'pointerShape0', 'pointer0Disabled', 0],\n    ['value1', 'ariaLabel1', 'pointerShape1', 'pointer1Disabled', 0],\n  ];\n\n  // The maximum number of such pointers is determined by the MAX_VALUES_API API constant (for performance reasons).\n  // https://github.com/toolcool-org/toolcool-range-slider/issues/2\n  for(let i=2; i<MAX_VALUES_API; i++){\n    apiProperties.push([`value${ i }`, `ariaLabel${ i }`, `pointer${ i }Shape`, `pointer${ i }Disabled`, i - 1]);\n  }\n\n  for(const item of apiProperties){\n    initPointerAPI($component,\n      slider,\n      item[4],\n      item[0],\n      item[1],\n      item[2],\n      item[3]\n    );\n  }\n\n};\n\n\nexport const changePointersOrder = (pointers: IPointer[], isDesc: boolean, $component: HTMLElement) => {\n\n  const $container = $component.shadowRoot?.querySelector('.container') as HTMLElement\n  if(!$container) return;\n\n  for(const pointer of pointers){\n    if(isDesc){\n      $container.prepend(pointer.$pointer);\n    }\n    else{\n      $container.append(pointer.$pointer);\n    }\n  }\n};\n","import { IPointer, Pointer } from './pointer';\nimport { convertRange, getBoolean, getNumber, isNumber, roundToStep, setDecimalPlaces } from '../domain/math-provider';\nimport * as AttributesEnum from '../enums/attributes-enum';\nimport { TData, TStep } from '../types';\nimport { findValueIndexInData, parseData } from '../dal/data-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { IPanelFill, PanelFill } from './panel-fill';\nimport { sendChangeEvent, sendMouseDownEvent, sendMouseUpEvent } from '../domain/events-provider';\nimport { IStyles, Styles } from './styles';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport * as CssClasses from '../enums/css-classes-enum';\nimport { getAttributesByRegex } from '../domain/common-provider';\nimport { IPluginsManager, PluginsManager } from '../plugins/plugins-manager';\nimport { changePointersOrder } from '../domain/pointers-provider';\n\nexport interface ISlider {\n  readonly pointers: IPointer[];\n  readonly styles: IStyles | null;\n  readonly pluginsManager: IPluginsManager | null;\n\n  pointersOverlap: boolean;\n  pointersMinDistance: number;\n  pointersMaxDistance: number;\n  rangeDragging: boolean;\n\n  readonly min: number | string;\n  readonly max: number | string;\n  readonly step: TStep;\n  readonly data: TData;\n\n  type: string;\n  rightToLeft: boolean;\n  bottomToTop: boolean;\n  disabled: boolean;\n  keyboardDisabled: boolean;\n  round: number;\n  animateOnClick: string | undefined | boolean;\n\n  getAriaLabel: (index: number) => (string | undefined);\n  setAriaLabel: (index: number, ariaLabel: string | undefined) => void;\n\n  setMin: (value: number | string | undefined | null) => void;\n  setMax: (value: number | string | undefined | null) => void;\n  setValue: (value: number | string | undefined | null, index: number) => void;\n  setStep: (value: TStep | string) => void;\n  setData: (value: TData | string | null | number) => void;\n  getTextValue: (_percent: number | undefined) => undefined | string | number;\n\n  addPointer: (value: number | string | undefined | null) => number;\n  removePointer: () => number;\n\n  destroy: () => void;\n}\n\nexport const MIN_DEFAULT = 0;\nexport const MAX_DEFAULT = 100;\nexport const ROUND_DEFAULT = 2;\nexport const ANIMATE_ON_CLICK_DEFAULT = '0.3s';\n\nexport const Slider = ($component: HTMLElement, $slider: HTMLElement, pointersList: [IPointer, string | number | undefined][]) : ISlider => {\n\n  const pointers = pointersList.map(item => item[0]);\n  let selectedPointer: IPointer | null | undefined = null;\n  let panelFill: IPanelFill | null = null;\n  let styles: IStyles | null = null;\n  let pluginsManager: IPluginsManager | null = null;\n\n  let min = MIN_DEFAULT;\n  let max = MAX_DEFAULT;\n  let step: TStep = undefined; // step is defined in absolute units (not percent!)\n  let data: TData = undefined;\n  let type: string = TypeEnum.Horizontal;\n  let round: number = ROUND_DEFAULT;\n  let rightToLeft = false;\n  let bottomToTop = false;\n\n  let pointersOverlap = false;\n  let pointersMinDistance = 0;\n  let pointersMaxDistance = Infinity;\n\n  let rangeDragging = false;\n\n  let rangeDraggingStart: number | undefined = undefined;\n  let rangeDraggingDiff: number | undefined = undefined;\n\n  let disabled = false;\n  let keyboardDisabled = false;\n  let animateOnClick: string | undefined = ANIMATE_ON_CLICK_DEFAULT;\n\n  const ariaLabels: (string | undefined)[] = [];\n\n  // -------------- EVENTS --------------------\n\n  const onMouseDown = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    onValueChange(evt);\n\n    window.addEventListener('mousemove', onValueChange);\n    window.addEventListener('mouseup', onMouseUp);\n\n    sendMouseDownEvent($component, evt);\n  };\n\n  const onMouseUp = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    rangeDraggingStart = undefined;\n    rangeDraggingDiff = undefined;\n\n    window.removeEventListener('mousemove', onValueChange);\n    window.removeEventListener('mouseup', onValueChange);\n\n    if(animateOnClick){\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n\n    sendMouseUpEvent($component, evt);\n  };\n\n  const getActivePointer = ($target: HTMLElement, percent: number) => {\n    if(pointers.length <= 0) return;\n\n    // if only 1 pointer exists --> return it\n    if(pointers.length === 1){\n      if(pointers[0].isClicked($target) && animateOnClick){\n        $slider.classList.remove(CssClasses.AnimateOnClick);\n      }\n\n      return pointers[0];\n    }\n\n    const panelFillClicked = isPanelFillClicked($target);\n\n    if(rangeDragging){\n\n      let _dragPercent = percent;\n      const stepPercent = getStepPercent(_dragPercent);\n      if(stepPercent !== undefined){\n        _dragPercent = roundToStep(_dragPercent, stepPercent);\n      }\n\n      if(panelFillClicked){\n        rangeDraggingStart = _dragPercent;\n        rangeDraggingDiff = 0;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n      }\n      else{\n        if(rangeDraggingStart !== undefined){\n          rangeDraggingDiff = _dragPercent - rangeDraggingStart;\n          rangeDraggingStart = _dragPercent;\n        }\n      }\n    }\n\n    if(!isPanelClicked($target) && !panelFillClicked){\n\n      // if clicked directly on 1 of the pointers ---> return it\n      for(const pointer of pointers){\n        if(!pointer.isClicked($target)) continue;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer;\n      }\n\n      // if already selected pointer ---> return it\n      for(const pointer of pointers){\n        if(selectedPointer === pointer) return pointer;\n      }\n    }\n\n    // find the closest pointer and return it\n    let minDistance = Infinity;\n    let minDistancePointer = null;\n\n    for(const pointer of pointers){\n      const distance = Math.abs(percent - pointer.percent);\n      if(distance < minDistance){\n        minDistance = distance;\n        minDistancePointer = pointer;\n      }\n    }\n\n    return minDistancePointer;\n  };\n\n  const getSelectedPointerIndex = () => {\n    return pointers.findIndex(pointer => selectedPointer === pointer && !pointer.disabled);\n  };\n\n  const onValueChange = (evt: MouseEvent | TouchEvent) => {\n\n    // find the percent [0, 100] of the current mouse position in vertical or horizontal slider\n    let percent;\n\n    if(type === TypeEnum.Vertical){\n      const { height: boxHeight, top: boxTop } = $slider.getBoundingClientRect();\n      const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n      const top = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n      percent = (top * 100) / boxHeight;\n    }\n    else{\n      const { width: boxWidth, left: boxLeft } = $slider.getBoundingClientRect();\n      const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n      const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n      percent = (left * 100) / boxWidth;\n    }\n\n    if(rightToLeft || bottomToTop){\n      percent = 100 - percent;\n    }\n\n    selectedPointer = getActivePointer(evt.target as HTMLElement, percent);\n\n    // handle range dragging\n    if(rangeDragging && pointers.length > 1 && rangeDraggingDiff !== undefined){\n\n      const firstPointer = pointers[0];\n      const lastPointer = pointers[pointers.length - 1];\n\n      const firstSmallerThanMin = firstPointer.percent + rangeDraggingDiff < 0;\n      const lastGreaterThanMax = lastPointer.percent + rangeDraggingDiff > 100;\n      if(firstSmallerThanMin || lastGreaterThanMax) return;\n\n      for(let i=0; i<pointers.length; i++){\n        setPositions(i, pointers[i].percent + rangeDraggingDiff);\n      }\n\n      return;\n    }\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex !== -1){\n      setPositions(foundIndex, percent);\n      selectedPointer?.$pointer.focus();\n    }\n  };\n\n  const pointerMouseWheel = (evt: WheelEvent) => {\n    if (disabled ||\n      document.activeElement !== $component ||\n      selectedPointer?.disabled) return;\n\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const scrollTop = evt.deltaY < 0;\n    const rightOrBottom = rightToLeft || bottomToTop;\n    const shouldGoPrev = scrollTop ? !rightOrBottom : rightOrBottom;\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex === -1) return;\n\n    if(shouldGoPrev){\n      goPrev(foundIndex, pointers[foundIndex].percent);\n    }\n    else{\n      goNext(foundIndex, pointers[foundIndex].percent);\n    }\n  };\n\n  // -------------- Arrows --------------------\n\n  const arrowLeft = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowRight = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowUp = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go forwards\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n  };\n\n  const arrowDown = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n  };\n\n  // -------------- Helpers ------------------------\n\n  const isPanelClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel');\n  };\n\n  const isPanelFillClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel-fill');\n  };\n\n  const goPrev = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent -= stepPercent;\n\n    if(_percent < 0){\n      _percent = 0;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const goNext = (index: number, _percent: number | undefined) => {\n\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent += stepPercent;\n\n    if(_percent > 100){\n      _percent = 100;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const updatePlugins = () => {\n\n    if(!pluginsManager) return;\n    pluginsManager.update({\n      percents: getPercents(),\n      values: getValues(),\n      $pointers: getPointerElements(),\n\n      min: getNumericMin(),\n      max: getNumericMax(),\n\n      data: getData(),\n      step: getStep(),\n      round: getRound(),\n      type: getType(),\n\n      textMin: getMin(),\n      textMax: getMax(),\n\n      rightToLeft: isRightToLeft(),\n      bottomToTop: isBottomToTop(),\n\n      pointersOverlap: isPointersOverlap(),\n      pointersMinDistance: getPointersMinDistance(),\n      pointersMaxDistance: getPointersMaxDistance(),\n      rangeDragging: isRangeDraggingEnabled(),\n\n      disabled: isDisabled(),\n      keyboardDisabled: isKeyboardDisabled(),\n    });\n  };\n\n  const requestUpdatePlugins = () => {\n    updatePlugins();\n  };\n\n  // -------------- Getters --------------------\n\n  const getPointerLeftWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === 0){\n      // by default 0, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n    else{\n      // by default previous pointer, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n  };\n\n  const getPointerRightWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === pointers.length - 1){\n      // by default 100, but if min distance between pointers is defined --->\n      // then the distance to the previous pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n    else{\n      // distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n  };\n\n  /**\n   * user step is defined in absolute values;\n   * this function return it as %\n   */\n  const getStepPercent = (_percent: number) => {\n\n    let _step: number | undefined | null;\n\n    if(typeof step === 'function'){\n      // convert percent to value: [0, 100] to [min, max]\n      const currentValue = convertRange(0, 100, min, max, _percent);\n\n      // the slider function provided by user should return an absolute value, not %\n      _step = step(currentValue, _percent);\n    }\n    else{\n      // the step value provided by the user should be absolute value (not %), undefined, or null\n      _step = step;\n    }\n\n    // round percent to step\n    if(isNumber(_step)){\n\n      /*\n      min ......... max (step = 1)\n      0 ........... 100 (step = ?)\n\n      (max - min) ....... step (=1)\n      100 ............... ?\n\n      ? = 100 * step / (max - min)\n      */\n\n      const diff = max - min;\n      _step = diff === 0 ? 0 :  (_step as number) * 100 / diff;\n\n      return _step;\n    }\n\n    return undefined;\n  };\n\n  const getTextValue = (_percent: number | undefined) => {\n    if(_percent === undefined) return undefined;\n\n    const val = convertRange(0, 100, min, max, _percent);\n\n    if(data !== undefined){\n      return data[Math.round(val)];\n    }\n\n    return setDecimalPlaces(val, round);\n  };\n\n  const getMin = () => {\n\n    if(data !== undefined){\n      return data[min];\n    }\n\n    return min;\n  };\n\n  const getMax = () => {\n\n    if(data !== undefined){\n      return data[max];\n    }\n\n    return max;\n  };\n\n  const getStep = () => {\n    return step;\n  };\n\n  const getPointerMin = (index: number) => {\n    if(index <= 0 || pointersOverlap) return getMin();\n    return getTextValue(pointers[index - 1].percent) ?? '';\n  };\n\n  const getPointerMax = (index: number) => {\n    if(pointers.length <= 1 ||\n      index >= pointers.length - 1 ||\n      pointersOverlap) return getMax();\n\n    return getTextValue(pointers[index + 1].percent) ?? '';\n  };\n\n  const getPercents = () => {\n    return pointers.map(pointer => pointer.percent);\n  };\n\n  const getValues = () => {\n    return pointers.map(pointer => getTextValue(pointer.percent));\n  }\n\n  const getPointerElements = () => {\n    return pointers.map(pointer => pointer.$pointer);\n  };\n\n  const getNumericMin = () => {\n    return min;\n  };\n\n  const getNumericMax = () => {\n    return max;\n  };\n\n  const getData = () => {\n    return data;\n  };\n\n  const getType = () => {\n    return type;\n  };\n\n  const getRound = () => {\n    return round;\n  };\n\n  const getPointersMinDistance = () => {\n    return pointersMinDistance;\n  };\n\n  const getPointersMaxDistance = () => {\n    return pointersMaxDistance;\n  };\n\n  const getAriaLabel = (index: number) => {\n    return ariaLabels[index];\n  };\n\n  const isRightToLeft = () => {\n    return rightToLeft;\n  };\n\n  const isBottomToTop = () => {\n    return bottomToTop;\n  };\n\n  const isDisabled = () => {\n    return disabled;\n  };\n\n  const isKeyboardDisabled = () => {\n    return keyboardDisabled;\n  };\n\n  const isPointersOverlap = () => {\n    return pointersOverlap;\n  };\n\n  const isRangeDraggingEnabled = () => {\n    return rangeDragging;\n  };\n\n  // -------------- Setters --------------------\n\n  const setPositions = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    // round percent to step\n    const stepPercent = getStepPercent(_percent);\n\n    if(stepPercent !== undefined){\n      _percent = roundToStep(_percent, stepPercent);\n    }\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.updatePosition(_percent, getPointerLeftWall(index), getPointerRightWall(index), type, rightToLeft, bottomToTop);\n    panelFill?.updatePosition(type, pointers.map(pointer => pointer.percent), rightToLeft, bottomToTop);\n\n    updatePlugins();\n\n    for(const pointer of pointers){\n      const valueText = getTextValue(pointer.percent);\n      if(valueText !== undefined){\n        pointer.setAttr('aria-valuenow', valueText.toString());\n        pointer.setAttr('aria-valuetext', valueText.toString());\n      }\n    }\n\n    setAriaMinMax();\n\n    sendChangeEvent($component, pointers.map(pointer => getTextValue(pointer.percent)));\n  };\n\n  const setAllPositions = () => {\n    for(let i=0; i<pointers.length; i++){\n      setPositions(i, pointers[i].percent);\n    }\n  };\n\n  /**\n   * on component init, min and max should be initialized together\n   * because their validations depend on each other;\n   */\n  const setMinMax = (_min: number | string | undefined | null, _max: number | string | undefined | null) => {\n\n    min = data !== undefined ? 0 : getNumber(_min, MIN_DEFAULT);\n    max = data !== undefined ? data.length - 1 : getNumber(_max, MAX_DEFAULT);\n\n    // perform validations\n    setMin(min);\n    setMax(max);\n  };\n\n  const setAriaMinMax = () => {\n    for(let i=0; i<pointers.length; i++){\n      const pointer = pointers[i];\n      pointer.setAttr('aria-valuemin', (getPointerMin(i) ?? '').toString());\n      pointer.setAttr('aria-valuemax', (getPointerMax(i) ?? '').toString());\n    }\n  };\n\n  const setMin = (_min: number | string | undefined | null) => {\n    min = getNumber(_min, MIN_DEFAULT);\n\n    if(min > max){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setMax = (_max: number | string | undefined | null) => {\n\n    max = getNumber(_max, MAX_DEFAULT);\n\n    if(max < min){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setValues = (values: (number | string | undefined)[]) => {\n\n    // initial values should be initialized together\n    // because their validations may depend on each other;\n\n    // init initial values with pointers overlap ----------\n    pointersOverlap = true;\n\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n\n    pointersOverlap = false;\n\n    // add all required validations ------------------------\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n  };\n\n  const setValue = (_val: number | string | undefined | null, index: number) => {\n\n    let val: number;\n\n    if(data !== undefined){\n\n      val = (_val === undefined || _val === null) ? 0 : findValueIndexInData(_val, data);\n      if(val === -1){\n        val = 0;\n      }\n    }\n    else{\n      val = getNumber(_val, min);\n\n      if(val < min){\n        val = min;\n      }\n\n      if(val > max){\n        val = max;\n      }\n    }\n\n    // scale a range [min,max] to [a,b]\n    const percent = convertRange(min, max, 0, 100, val);\n\n    setPositions(index, percent);\n  };\n\n  const setStep = (_step: TStep | string) => {\n    if(_step === null || _step === undefined){\n      step = undefined;\n      return;\n    }\n\n    if (typeof _step === 'function') {\n      step = _step;\n      setAllPositions();\n      return;\n    }\n\n    if(isNumber(_step)){\n      step = getNumber(_step, 1);\n\n      const diff = Math.abs(max - min);\n      if (step > diff) {\n        step = undefined;\n      }\n\n      setAllPositions();\n      return;\n    }\n\n    step = undefined;\n  };\n\n  const setPointersOverlap = (_pointersOverlap: boolean) => {\n    pointersOverlap = _pointersOverlap;\n    setAllPositions();\n  };\n\n  const setPointersMinDistance = (_pointersMinDistance: number) => {\n    if(!isNumber(_pointersMinDistance) || _pointersMinDistance < 0){\n      _pointersMinDistance = 0;\n    }\n    pointersMinDistance = _pointersMinDistance;\n  };\n\n  const setPointersMaxDistance = (_pointersMaxDistance: number) => {\n    if(!isNumber(_pointersMaxDistance) || _pointersMaxDistance < 0){\n      _pointersMaxDistance = Infinity;\n    }\n    pointersMaxDistance = _pointersMaxDistance;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $slider.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $slider.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($slider.hasAttribute('aria-disabled')) {\n        $slider.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setKeyboardDisabled = (_disabled: boolean) => {\n    keyboardDisabled = _disabled;\n  };\n\n  const setData = (_data: TData | string | number | null) => {\n\n    if(_data === null || _data === undefined){\n      data = undefined;\n      return;\n    }\n\n    data = parseData(_data as string);\n    if(data === undefined || data.length <= 0){\n      data = undefined;\n      return;\n    }\n\n    setMin(0);\n    setMax(data.length - 1);\n\n    if(step === undefined){\n      setStep(1);\n    }\n  };\n\n  const setType = (_type: string | null | undefined) => {\n\n    if(typeof _type === 'string'){\n      type = _type.trim().toLowerCase() === TypeEnum.Vertical ? TypeEnum.Vertical : TypeEnum.Horizontal;\n    }\n    else{\n      type = TypeEnum.Horizontal;\n    }\n\n    const $box = $component.shadowRoot?.querySelector('.range-slider-box');\n    if(!$box) return;\n    $box.className = `range-slider-box type-${ type }`;\n\n    setAllPositions();\n\n    // update accessibility properties\n    const aria = type === TypeEnum.Vertical ? 'vertical' : 'horizontal';\n    for(const pointer of pointers){\n      pointer.setAttr('aria-orientation', aria);\n    }\n  };\n\n  const setRightToLeft = (_rightToLeft: boolean) => {\n    rightToLeft = _rightToLeft;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, rightToLeft, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setBottomToTop = (_bottomToTop: boolean) => {\n    bottomToTop = _bottomToTop;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, bottomToTop, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setRound = (_round: number) => {\n    round = getNumber(_round, ROUND_DEFAULT);\n\n    if(round < 0){\n      round = ROUND_DEFAULT;\n    }\n\n    updatePlugins();\n  };\n\n  const setAnimateOnClick = (_animateOnClick: string | boolean | null | undefined) => {\n    if(_animateOnClick === null ||\n      _animateOnClick === undefined ||\n      _animateOnClick.toString().trim().toLowerCase() === 'false'){\n      animateOnClick = undefined;\n      $slider.style.removeProperty(CSSVariables.AnimateOnClick);\n      $slider.classList.remove(CssClasses.AnimateOnClick);\n    }\n    else{\n      animateOnClick = _animateOnClick.toString();\n      $slider.style.setProperty(CSSVariables.AnimateOnClick, animateOnClick);\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n  };\n\n  const setAriaLabel = (index: number, _ariaLabel: string | undefined) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.setAttr('aria-label', _ariaLabel);\n    ariaLabels[index] = _ariaLabel;\n  };\n\n  const setRangeDragging = (_rangeDragging: boolean) => {\n    rangeDraggingStart = undefined;\n\n    if(pointers.length <= 1){\n      rangeDragging = false;\n      $slider.classList.remove(CssClasses.RangeDragging);\n      return;\n    }\n\n    rangeDragging = _rangeDragging;\n    $slider.classList.toggle(CssClasses.RangeDragging, rangeDragging);\n  };\n\n  // initialization -------------------------------------\n\n  const initDisabled = () => {\n    setDisabled(getBoolean($component.getAttribute(AttributesEnum.Disabled)));\n    keyboardDisabled = getBoolean($component.getAttribute(AttributesEnum.KeyboardDisabled))\n\n    // handle 'pointer1-disabled, pointer2-disabled, etc.\n    const disabledList = getAttributesByRegex($component, /^pointer([0-9]*)-disabled$/, (val: string) => {\n      return getBoolean(val);\n    });\n\n    for(const item of disabledList){\n      const pointerIndex = item[0];\n      if(!pointers[pointerIndex]) continue;\n      pointers[pointerIndex].disabled = item[1];\n    }\n  };\n\n  const initAriaLabels = () => {\n    // handle 'aria-label1', 'aria-label2', etc.\n    const ariaLabelsList = getAttributesByRegex($component, /^aria-label([0-9]*)$/);\n\n    for(const item of ariaLabelsList){\n      const index = item[0];\n      setAriaLabel(index, item[1] as string);\n    }\n  };\n\n  // add pointer - always to the end\n  const addPointer = (value: string | number | undefined) => {\n    const len = pointers.length;\n    const $latestPointer = pointers[len - 1].$pointer;\n\n    const $newPointer = $latestPointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n    const newPointer = Pointer($component, $newPointer, len);\n\n    newPointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointers.push(newPointer);\n\n    setValue(value, len);\n    setAllPositions();\n    updatePlugins();\n\n    return len;\n  };\n\n  // always from the end\n  const removePointer = () => {\n    const len = pointers.length;\n    const pointer = pointers[len - 1];\n    if(!pointer) return -1;\n\n    pointer.destroy();\n    pointers.pop();\n\n    if(pointers.length <= 1){\n      setRangeDragging(false);\n    }\n\n    setAllPositions();\n    updatePlugins();\n\n    return len - 1;\n  };\n\n  (() => {\n\n    // init pointer callbacks for arrow keys\n    for(const pointer of pointers){\n      pointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    }\n\n    // init panel fill\n    const $fill = $component.shadowRoot?.querySelector('.panel-fill') as HTMLElement;\n    if($fill){\n      panelFill = PanelFill($fill);\n    }\n\n    // init main properties from HTML attributes\n    setType($component.getAttribute(AttributesEnum.Type));\n    setRightToLeft(getBoolean($component.getAttribute(AttributesEnum.RightToLeft)));\n    setBottomToTop(getBoolean($component.getAttribute(AttributesEnum.BottomToTop)));\n\n    setMinMax($component.getAttribute(AttributesEnum.Min), $component.getAttribute(AttributesEnum.Max));\n    setStep($component.getAttribute(AttributesEnum.Step));\n    setData($component.getAttribute(AttributesEnum.Data));\n\n    // set value and render the pointers ----------------------\n    setValues(pointersList.map(item => item[1]));\n\n    // overlaps MUST be defined after the pointer values\n    setPointersOverlap(getBoolean($component.getAttribute(AttributesEnum.PointersOverlap)));\n    setPointersMinDistance(getNumber($component.getAttribute(AttributesEnum.PointersMinDistance), 0));\n    setPointersMaxDistance(getNumber($component.getAttribute(AttributesEnum.PointersMaxDistance), Infinity));\n    setRangeDragging(getBoolean($component.getAttribute(AttributesEnum.RangeDragging)));\n\n    // additional properties -----------------------------\n    setRound(getNumber($component.getAttribute(AttributesEnum.Round), ROUND_DEFAULT));\n    initDisabled();\n    initAriaLabels();\n\n    // init styles ---------\n    styles = Styles($component, $slider, pointers);\n    setAnimateOnClick($component.getAttribute(AttributesEnum.AnimateOnClick) ?? ANIMATE_ON_CLICK_DEFAULT);\n\n    // init slider events -------------------------------------\n    $slider.addEventListener('mousedown', onMouseDown);\n    $slider.addEventListener('mouseup', onMouseUp);\n    $slider.addEventListener('touchmove', onValueChange);\n    $slider.addEventListener('touchstart', onValueChange);\n    document.addEventListener('wheel', pointerMouseWheel, { passive: false });\n\n    // init plugins ---------------\n    pluginsManager = PluginsManager(\n      $component,\n      requestUpdatePlugins,\n      {\n        setValues,\n        setMin,\n        setMax,\n        setStep,\n        setPointersOverlap,\n        setPointersMinDistance,\n        setPointersMaxDistance,\n        setDisabled,\n        setType,\n        setRightToLeft,\n        setBottomToTop,\n        setRound,\n        setKeyboardDisabled,\n        setRangeDragging,\n        setData,\n      },\n      {\n        getPercents,\n        getValues,\n        getPointerElements,\n\n        getMin: getNumericMin,\n        getMax: getNumericMax,\n\n        getStep,\n        getData,\n        getType,\n        getRound,\n\n        getTextMin: getMin,\n        getTextMax: getMax,\n\n        isRightToLeft,\n        isBottomToTop,\n\n        isDisabled,\n        isKeyboardDisabled,\n\n        isPointersOverlap,\n        isRangeDraggingEnabled,\n        getPointersMinDistance,\n        getPointersMaxDistance,\n      }\n    );\n    pluginsManager.init();\n  })();\n\n  const destroy = () => {\n    $slider.removeEventListener('mousedown', onMouseDown);\n    $slider.removeEventListener('mouseup', onMouseUp);\n    $slider.removeEventListener('touchmove', onValueChange);\n    $slider.removeEventListener('touchstart', onValueChange);\n    document.removeEventListener('wheel', pointerMouseWheel);\n\n    for(const pointer of pointers){\n      pointer.destroy();\n    }\n\n    pluginsManager?.destroy();\n  };\n\n  return {\n    get pointers() {\n      return pointers;\n    },\n\n    get styles() {\n      return styles;\n    },\n\n    get pluginsManager() {\n      return pluginsManager;\n    },\n\n    get min() {\n      return getMin();\n    },\n\n    get max() {\n      return getMax();\n    },\n\n    get step() {\n      return getStep();\n    },\n\n    get pointersOverlap() {\n      return isPointersOverlap();\n    },\n\n    set pointersOverlap(_pointersOverlap) {\n      setPointersOverlap(_pointersOverlap);\n    },\n\n    get pointersMinDistance() {\n      return getPointersMinDistance();\n    },\n\n    set pointersMinDistance(_pointersMinDistance) {\n      setPointersMinDistance(_pointersMinDistance);\n    },\n\n    get pointersMaxDistance() {\n      return getPointersMaxDistance();\n    },\n\n    set pointersMaxDistance(_pointersMaxDistance) {\n      setPointersMaxDistance(_pointersMaxDistance);\n    },\n\n    get disabled() {\n      return isDisabled();\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    get data() {\n      return getData();\n    },\n\n    get type() {\n      return getType();\n    },\n\n    set type(_type) {\n      setType(_type);\n    },\n\n    get rightToLeft() {\n      return isRightToLeft();\n    },\n\n    set rightToLeft(_rightToLeft) {\n      setRightToLeft(_rightToLeft);\n    },\n\n    get bottomToTop() {\n      return isBottomToTop();\n    },\n\n    set bottomToTop(_bottomToTop) {\n      setBottomToTop(_bottomToTop);\n    },\n\n    get round() {\n      return getRound();\n    },\n\n    set round(_round) {\n      setRound(_round);\n    },\n\n    get animateOnClick() {\n      return animateOnClick;\n    },\n\n    set animateOnClick(_animateOnClick) {\n      setAnimateOnClick(_animateOnClick);\n    },\n\n    get keyboardDisabled() {\n      return isKeyboardDisabled();\n    },\n\n    set keyboardDisabled(_keyboardDisabled){\n      setKeyboardDisabled(_keyboardDisabled);\n    },\n\n    get rangeDragging() {\n      return isRangeDraggingEnabled();\n    },\n\n    set rangeDragging(_rangeDragging) {\n      setRangeDragging(_rangeDragging);\n    },\n\n    setMin,\n    setMax,\n    setValue,\n    setStep,\n    setData,\n    getTextValue,\n    setAriaLabel,\n    getAriaLabel,\n\n    addPointer,\n    removePointer,\n\n    destroy,\n  };\n};\n\n","import mainTemplate from '../templates/main.html.js'; // esbuild custom loader\nimport styles from './styles.pcss';\nimport { onAttributeChange } from '../domain/attributes-provider';\nimport { ISlider, ROUND_DEFAULT, Slider } from '../ui/slider';\nimport { TData, TStep } from '../types';\nimport { getBoolean } from '../domain/math-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { getExternalCSSList } from '../domain/common-provider';\nimport { initPointerAPI, initPointerAPIs, initPointers } from '../domain/pointers-provider';\n\n/**\n * Usage: <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n * Documentation: https://github.com/toolcool-org/toolcool-range-slider\n */\nclass TCRangeSlider extends HTMLElement {\n\n  public slider: ISlider | undefined;\n\n  private _externalCSSList: string[] | null = [];\n\n  private _observer: MutationObserver | null = null;\n\n  // -------------- APIs --------------------\n\n  public set step(_step: TStep) {\n    if(this.slider){\n      this.slider.setStep(_step);\n    }\n  }\n\n  public get step() {\n    return this.slider?.step;\n  }\n\n  public set disabled(_disabled: boolean) {\n    if(this.slider){\n      this.slider.disabled = _disabled;\n    }\n  }\n\n  public get disabled() {\n    return this.slider?.disabled ?? false;\n  }\n\n  public set data(_data: TData) {\n    this.slider?.setData(_data);\n  }\n\n  public get data() {\n    return this.slider?.data;\n  }\n\n  public set min(_min: number | string | undefined | null) {\n    this.slider?.setMin(_min);\n  }\n\n  public get min() {\n    return this.slider?.min;\n  }\n\n  public set max(_max: number | string | undefined | null) {\n    this.slider?.setMax(_max);\n  }\n\n  public get max() {\n    return this.slider?.max;\n  }\n\n  public set round(_round: number) {\n    if(!this.slider) return;\n    this.slider.round = _round;\n  }\n\n  public get round() {\n    return this.slider?.round ?? ROUND_DEFAULT;\n  }\n\n  public set type(_type: string | undefined) {\n    if(!this.slider) return;\n    this.slider.type = _type ?? TypeEnum.Horizontal;\n  }\n\n  public get type() {\n    return this.slider?.type || TypeEnum.Horizontal;\n  }\n\n  public set pointersOverlap(_pointersOverlap: boolean) {\n    if(!this.slider) return;\n    this.slider.pointersOverlap = _pointersOverlap;\n  }\n\n  public get pointersOverlap() {\n    return this.slider?.pointersOverlap ?? false;\n  }\n\n  public set pointersMinDistance(_pointersMinDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMinDistance = _pointersMinDistance;\n  }\n\n  public get pointersMinDistance() {\n    return this.slider?.pointersMinDistance ?? 0;\n  }\n\n  public set pointersMaxDistance(_pointersMaxDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMaxDistance = _pointersMaxDistance;\n  }\n\n  public get pointersMaxDistance() {\n    return this.slider?.pointersMaxDistance ?? Infinity;\n  }\n\n  public set theme(_theme: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.theme = _theme;\n  }\n\n  public get theme() {\n    return this.slider?.styles?.theme ?? null;\n  }\n\n  public set rtl(_rtl: boolean) {\n    if(!this.slider) return;\n    this.slider.rightToLeft = _rtl;\n  }\n\n  public get rtl() {\n    return this.slider?.rightToLeft ?? false;\n  }\n\n  public set btt(_btt: boolean) {\n    if(!this.slider) return;\n    this.slider.bottomToTop = _btt;\n  }\n\n  public get btt() {\n    return this.slider?.bottomToTop ?? false;\n  }\n\n  public set keyboardDisabled(_keyboardDisabled: boolean) {\n    if(!this.slider) return;\n    this.slider.keyboardDisabled = _keyboardDisabled;\n  }\n\n  public get keyboardDisabled() {\n    return this.slider?.keyboardDisabled ?? false;\n  }\n\n  public set animateOnClick(_animateOnClick: string | boolean | undefined) {\n    if(!this.slider) return;\n    this.slider.animateOnClick = _animateOnClick;\n  }\n\n  public get animateOnClick() {\n    return this.slider?.animateOnClick;\n  }\n\n  public get rangeDragging(){\n    return this.slider?.rangeDragging ?? false;\n  }\n\n  public set rangeDragging(_rangeDragging: boolean | string | undefined | null) {\n    if(this.slider){\n      this.slider.rangeDragging = getBoolean(_rangeDragging);\n    }\n  }\n\n  public get externalCSSList() {\n    return this._externalCSSList;\n  }\n\n  public addPointer(value: number | string | undefined) {\n    if(!this.slider) return;\n\n    const index = this.slider?.addPointer(value);\n\n    initPointerAPI(this,\n      this.slider,\n      index,\n      `value${ index + 1 }`,\n      `ariaLabel${ index + 1 }`,\n      `pointerShape${ index + 1 }`,\n      `pointer${ index + 1 }Disabled`\n    );\n  }\n\n  public removePointer() {\n    if(!this.slider) return;\n    this.slider?.removePointer();\n  }\n\n  public addCSS(css: string) {\n    if(!this.shadowRoot) return;\n\n    const sheet = document.createElement('style')\n    sheet.textContent = css;\n    this.shadowRoot.appendChild(sheet);\n  }\n\n  // ----------------------------------------------\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // get optional external CSS list\n    this._externalCSSList = getExternalCSSList(this);\n    this.shadowRoot.innerHTML = mainTemplate(styles, this._externalCSSList);\n\n    // init first pointer\n    const $pointer = this.shadowRoot?.querySelector('.pointer') as HTMLElement;\n    if(!$pointer) return;\n\n    // init the slider\n    const $slider = this.shadowRoot?.getElementById('range-slider') as HTMLElement;\n    if(!$slider) return;\n\n    const pointers = initPointers(this, $pointer);\n    this.slider = Slider(this, $slider, pointers);\n\n    initPointerAPIs(this, this.slider);\n\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (!this.slider || mutation.type !== 'attributes') return;\n\n        const attrName = mutation.attributeName;\n        if(!attrName) return;\n\n        onAttributeChange(this.slider, attrName, this.getAttribute(attrName) ?? '');\n      });\n    });\n\n    this._observer.observe(this, {\n      attributes: true, //configure it to listen to attribute changes\n    });\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    if(this._observer){\n      this._observer.disconnect();\n    }\n\n    if(!this.slider) return\n\n    this.slider.destroy();\n  }\n}\n\nexport default TCRangeSlider;\n","module.exports=CindyJS;",null,"\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aT88m\\\":\\\"index.988fbcfc.js\\\",\\\"lpQ5Q\\\":\\\"slider.44e0a9e1.css\\\"}\"));","import { getNumber, isNumber } from './math-provider';\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\ninterface IIndexable<T = any> { [key: string]: T }\n\nexport const sendPointerClickedEvent = ($component: HTMLElement, $pointer: HTMLElement) => {\n  $component.dispatchEvent(\n    new CustomEvent('onPointerClicked', {\n      detail: {\n        $pointer: $pointer,\n      },\n    })\n  );\n};\n\nexport const sendMouseDownEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendMouseUpEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseUp', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendOnKeyDownEvent = ($component: HTMLElement, evt: KeyboardEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onKeyDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendChangeEvent = (\n  $component: HTMLElement,\n  values: (string | number | undefined)[],\n) => {\n\n  if(!values || values.length <= 0) return;\n\n  const transformed = values.map(value => isNumber(value) ? getNumber(value, value) : value);\n\n  const detail: IIndexable = {\n    values: transformed || [],\n  };\n\n  detail.value = transformed[0];\n  detail.value0 = transformed[0];\n  detail.value1 = transformed[0];\n\n  for(let i=1; i<transformed.length; i++){\n    detail[`value${ i + 1 }`] = transformed[i];\n  }\n\n  $component.dispatchEvent(\n    new CustomEvent('change', {\n      detail,\n    })\n  );\n};","import { isNumber } from '../domain/math-provider';\n\nexport const parseData = (dataString: string | undefined | null): (string | number)[] | undefined => {\n  if (dataString === undefined || dataString === null) return undefined;\n\n  if(Array.isArray(dataString)) return dataString as (string | number)[];\n\n  const result = dataString.trim();\n  if (result === '') return undefined;\n\n  const parts = dataString.split(',');\n  const list: string[] = [];\n  let allValuesAreNumbers = true;\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i].trim();\n    if (part === '') continue;\n\n    list.push(part);\n\n    if (!isNumber(part)) {\n      allValuesAreNumbers = false;\n    }\n  }\n\n  if (!allValuesAreNumbers) return list;\n\n  return list.map((item) => Number(item));\n};\n\nexport const findValueIndexInData = (val: string | number, data: (string | number)[] | undefined) => {\n  return data ? data.findIndex((item) => item === val || item.toString().trim() === val.toString().trim()) : -1;\n};","import * as TypeEnum from '../enums/type-enum';\n\nexport interface IPanelFill {\n  updatePosition: (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => void;\n}\n\nexport const PanelFill = ($fill: HTMLElement) : IPanelFill => {\n\n  const updatePosition = (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => {\n\n    if(percents.length <= 0) return;\n\n    const oneOnly = percents.length === 1;\n    const first = percents[0] as number;\n    const last = percents[percents.length - 1] as number;\n\n    if (type === TypeEnum.Vertical) {\n      $fill.style.removeProperty('width');\n      $fill.style.removeProperty('right');\n      $fill.style.removeProperty('left');\n\n      if (!oneOnly) {\n        $fill.style.height = `${Math.abs(first - last)}%`;\n      }\n      else{\n        $fill.style.height = `${ first }%`;\n      }\n\n      if (bottomToTop) {\n        $fill.style.bottom = '0%';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(100 - last, 100 - first)}%`;\n        }\n        else{\n          $fill.style.top = 'auto';\n        }\n      }\n      else {\n        $fill.style.bottom = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(first, last)}%`;\n        }\n        else{\n          $fill.style.top = '0%';\n        }\n      }\n    }\n    else {\n      $fill.style.removeProperty('height');\n      $fill.style.removeProperty('top');\n      $fill.style.removeProperty('bottom');\n\n      if (!oneOnly) {\n        $fill.style.width = `${ Math.abs(first - last) }%`;\n      }\n      else{\n        $fill.style.width = `${ first }%`;\n      }\n\n      if (rightToLeft) {\n        $fill.style.right = '0%';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(100 - last, 100 - first) }%`;\n        }\n        else{\n          $fill.style.left = 'auto';\n        }\n      }\n      else {\n        $fill.style.right = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(first, last) }%`;\n        }\n        else{\n          $fill.style.left = '0%';\n        }\n      }\n    }\n  };\n\n  return {\n    updatePosition,\n  };\n};","import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from './interfaces';\n\ndeclare global {\n  interface Window {\n    tcRangeSliderPlugins: (() => IPlugin)[];\n    tcRangeSliderObservedAttr: string[];\n  }\n}\n\nexport interface IPluginsManager {\n  init: () => void;\n\n  update: (data: IPluginUpdateData) => void;\n\n  onAttrChange: (attrName: string, newValue: string) =>  void;\n\n  destroy: () => void;\n}\n\nexport const PluginsManager = (\n  $component: HTMLElement,\n  requestUpdatePlugins: () => void,\n  setters: IPluginSetters,\n  getters: IPluginGetters,\n) : IPluginsManager => {\n\n  const plugins: IPlugin[] = [];\n\n  // ------ APIs ----------------------------\n\n  const update = (data: IPluginUpdateData) => {\n    for(const plugin of plugins){\n      if(plugin.update && typeof plugin.update === 'function'){\n        plugin.update(data);\n      }\n    }\n  };\n\n  const destroy = () => {\n    for(const plugin of plugins){\n      if(plugin.destroy && typeof plugin.destroy === 'function'){\n        plugin.destroy();\n      }\n    }\n  };\n\n  const onAttrChange = (_attrName: string, _newValue: string) => {\n    for(const plugin of plugins){\n      if(plugin.onAttrChange && typeof plugin.onAttrChange === 'function'){\n        plugin.onAttrChange(\n          _attrName,\n          _newValue\n        );\n      }\n    }\n  };\n\n  const defineSettersGetters = (plugin: IPlugin) => {\n    if(!plugin.gettersAndSetters) return;\n\n    for(const item of plugin.gettersAndSetters){\n      if(!item.name || !item.attributes) continue;\n\n      try{\n        if(!Object.prototype.hasOwnProperty.call($component, item.name)){\n          Object.defineProperty($component, item.name, item.attributes);\n        }\n      }\n      catch (ex){\n        console.error('defineSettersGetters error:', ex);\n      }\n    }\n  };\n\n  const initStyles = (plugin: IPlugin) => {\n    if(!plugin.css) return;\n\n    const $style = $component.shadowRoot?.querySelector('style');\n    if(!$style) return;\n\n    $style.innerHTML += plugin.css;\n  };\n\n  // ------ initialization ------------------\n  const init = () => {\n    if(!window.tcRangeSliderPlugins) return;\n\n    for(const pluginFunc of window.tcRangeSliderPlugins){\n      const plugin = pluginFunc();\n      plugins.push(plugin);\n\n      if(plugin.init && typeof plugin.init === 'function'){\n\n        // call plugin initialization function\n        plugin.init(\n          $component,\n          requestUpdatePlugins,\n          setters,\n          getters,\n        );\n\n        // if plugin has getters and setters that used for APIs ---> define them\n        defineSettersGetters(plugin);\n\n        // if plugin has css rules defined as plain text ---> they can be added dynamically\n        initStyles(plugin);\n      }\n    }\n  };\n\n  return {\n    init,\n    update,\n    onAttrChange,\n    destroy,\n  };\n};","import * as AttributesEnum from '../enums/attributes-enum';\nimport { ISlider, ROUND_DEFAULT } from '../ui/slider';\nimport { getBoolean, getNumber } from './math-provider';\nimport { stylePropertiesList } from '../ui/styles';\n\nexport const onAttributeChange = (slider: ISlider, attrName: string, newValue: string) => {\n\n  // handle style properties ------------------------------------\n  // try to get style property - ['--pointer-width', 'pointer-width', 1, 'pointerWidth']\n  const found = stylePropertiesList.find(([_cssVariableName, _attrName, _apiProperty, _regex]) => {\n    return _attrName.replace('#', '') === attrName.replace(/\\d+/g, '');\n  });\n\n  if(found && slider.styles){\n    const [_cssVariableName, _attrName, _apiProperty, _regex] = found;\n\n    const key = attrName.replace(/\\D/g, '').trim();\n    const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n\n    slider.styles.setStyle(_cssVariableName, newValue, index);\n    return;\n  }\n\n  if(slider && slider.pluginsManager){\n    slider.pluginsManager.onAttrChange(attrName, newValue);\n  }\n\n  // handle static properties ----------------------------------\n  switch (attrName) {\n\n    case AttributesEnum.Min: {\n      slider.setMin(newValue);\n      break;\n    }\n\n    case AttributesEnum.Max: {\n      slider.setMax(newValue);\n      break;\n    }\n\n    case AttributesEnum.Step: {\n      slider.setStep(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersOverlap: {\n      slider.pointersOverlap = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMinDistance: {\n      slider.pointersMinDistance = getNumber(newValue, 0);\n      break;\n    }\n\n    case AttributesEnum.RangeDragging: {\n      slider.rangeDragging = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMaxDistance: {\n      slider.pointersMaxDistance = getNumber(newValue, Infinity);\n      break;\n    }\n\n    case AttributesEnum.Disabled: {\n      slider.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.KeyboardDisabled: {\n      slider.keyboardDisabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Data: {\n      slider.setData(newValue);\n      break;\n    }\n\n    case AttributesEnum.Type: {\n      slider.type = newValue;\n      break;\n    }\n\n    case AttributesEnum.RightToLeft: {\n      slider.rightToLeft = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.BottomToTop: {\n      slider.bottomToTop = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Round: {\n      slider.round = getNumber(newValue, ROUND_DEFAULT);\n      break;\n    }\n\n    case AttributesEnum.Theme: {\n      if(slider.styles){\n        slider.styles.theme = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.AnimateOnClick: {\n      slider.animateOnClick = newValue;\n      break;\n    }\n  }\n\n  // handle dynamic properties ------------------------------------\n  let property: string | null = null;\n\n  if(/^value([0-9]*)$/.test(attrName)){\n    property = 'value';\n  }\n\n  if(/^pointer([0-9]*)-disabled$/.test(attrName)){\n    property = 'pointer-disabled';\n  }\n\n  if(/^aria-label([0-9]*)$/.test(attrName)){\n    property = 'aria-label';\n  }\n\n  if(/^pointer([0-9]*)-shape$/.test(attrName)){\n    property = 'pointer-shape';\n  }\n\n  if(!property) return;\n\n  const key = attrName.replace(/\\D/g, '').trim();\n  const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1)\n\n  switch (property) {\n\n    case 'value': {\n      slider.setValue(newValue, index);\n      break;\n    }\n\n    case 'pointer-disabled': {\n      const pointer = slider?.pointers[index];\n      if(!pointer) return;\n\n      pointer.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case 'aria-label': {\n      slider.setAriaLabel(index, newValue);\n      break;\n    }\n\n    case 'pointer-shape': {\n      if(slider.styles){\n        slider.styles.setPointerShape(index, newValue);\n      }\n      break;\n    }\n  }\n};","import TCRangeSlider from './app/range-slider';\nimport { DynamicFields } from './types';\n\ntype RangeSlider = TCRangeSlider & HTMLElement & DynamicFields;\n\ndeclare global {\n  interface Window {\n    tcRangeSlider: typeof TCRangeSlider;\n  }\n}\n\nwindow.tcRangeSlider = TCRangeSlider;\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', TCRangeSlider);\n}\n\nif (!customElements.get('tc-range-slider')) {\n  customElements.define('tc-range-slider', class extends TCRangeSlider{});\n}\n\nexport default RangeSlider;\n\n\n",null,null,"module.exports = \"66faa69837fceed8\";","module.exports = \"e6d9450a79d31abd\";","module.exports = \"8ec35fb348c6cc02\";","module.exports = \"bf20b288e8c20562\";",null,"module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lpQ5Q\")).toString();","import \"toolcool-range-slider\";\nimport SurferCoreGpu from \"@imaginary-maths/surfer-js-core-gpu\";\n\nconst sliderCssUrl = new URL(\"slider.scss\", import.meta.url);\n\nfunction createSliders() {\n  const container = document.getElementById(\"sliders\");\n\n  const commonSliderAttributes = {\n    //    type: \"vertical\",\n    generateLabels: \"false\",\n    \"animate-onclick\": \"false\",\n    \"css-links\": sliderCssUrl.href,\n    theme: \"surfer\",\n    \"slider-width\": \"256px\",\n    \"slider-height\": \"0.7rem\",\n    //    \"slider-height\": \"512px\",\n    //    \"slider-width\": \"0.7rem\",\n  };\n\n  const paramASlider = document.createElement(\"tc-range-slider\");\n  paramASlider.setAttribute(\"min\", \"0.4\");\n  paramASlider.setAttribute(\"max\", \"1.2\");\n  paramASlider.setAttribute(\"step\", \"0.0001\");\n  paramASlider.setAttribute(\"value\", \"1.0\");\n\n  const opacitySlider = document.createElement(\"tc-range-slider\");\n  opacitySlider.setAttribute(\"min\", \"0.3\");\n  opacitySlider.setAttribute(\"max\", \"1\");\n  opacitySlider.setAttribute(\"step\", \"0.0001\");\n  opacitySlider.setAttribute(\"value\", \"0.75\");\n\n  const zoomSlider = document.createElement(\"tc-range-slider\");\n  zoomSlider.setAttribute(\"min\", \"-3\");\n  zoomSlider.setAttribute(\"max\", \"0.5\");\n  zoomSlider.setAttribute(\"step\", \"0.0001\");\n  zoomSlider.setAttribute(\"value\", \"-1\");\n\n  const sliders = [paramASlider, opacitySlider, zoomSlider];\n  const attrs = Object.entries(commonSliderAttributes);\n  sliders.forEach((s) => {\n    attrs.forEach(([name, value]) => s.setAttribute(name, value));\n    container.append(s);\n  });\n\n  return {\n    paramASlider,\n    opacitySlider,\n    zoomSlider,\n  };\n}\n\nconst lights = [\n  {\n    // light emulating a front side material #1\n    direction: [0, 0, -1],\n    color: [231 / 255, 49 / 255, 77 / 255],\n    gamma: 1,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a front side material #2\n    direction: [0, 0, -1],\n    color: [243 / 255, 179 / 255, 41 / 255],\n    gamma: 10,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a back side material #1\n    direction: [0, 0, 1],\n    color: [46 / 255, 127 / 255, 186 / 255],\n    gamma: 1,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a back side material #2\n    direction: [0, 0, 1],\n    color: [98 / 255, 177 / 255, 114 / 255],\n    gamma: 10,\n    cameraSpace: true,\n  },\n  {\n    // light that is fixed in the scene #1\n    direction: [-10, 10, -2],\n    color: [0.63, 0.72, 0.27],\n    gamma: 5,\n    cameraSpace: false,\n  },\n  {\n    // light that is fixed in the scene #2\n    direction: [10, -8, 3],\n    color: [0.54, 0.09, 0.54],\n    gamma: 5,\n    cameraSpace: false,\n  },\n];\n\nasync function init() {\n  const form = document.getElementById(\"formula-form\") as HTMLFormElement;\n  const input = document.getElementById(\"formula\") as HTMLTextAreaElement;\n  const button = document.getElementById(\"go\");\n\n  const { paramASlider, opacitySlider, zoomSlider } = createSliders();\n\n  const im = new SurferCoreGpu.IlluminationModels.Montag(lights);\n\n  const container = document.getElementById(\"surfer-container\");\n  const surferCoreGpu = await SurferCoreGpu.create(container, 512, 512);\n  surferCoreGpu.setExpression(input.value);\n  surferCoreGpu.setParameter(\"a\", paramASlider.value);\n  surferCoreGpu.setZoom(Math.pow(2, zoomSlider.value));\n  surferCoreGpu.setAlpha(opacitySlider.value);\n  surferCoreGpu.element.classList.add(\"surface\");\n  surferCoreGpu.setIlluminationModel(im);\n\n  paramASlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setParameter(\"a\", evt.detail.value);\n  });\n\n  opacitySlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setAlpha(evt.detail.value);\n  });\n\n  zoomSlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setZoom(Math.pow(2, evt.detail.value));\n  });\n\n  const submit = () => surferCoreGpu.setExpression(input.value);\n  const submitByKey = (e) => (e.code === \"Enter\" ? submit() : undefined);\n  form.addEventListener(\"submit\", submit);\n  button.addEventListener(\"click\", submit);\n  input.addEventListener(\"keydown\", submitByKey);\n\n  window.addEventListener(\"message\", (evt) =>\n    surferCoreGpu.setExpression(evt.data)\n  );\n}\ninit().then();\n"],"names":["Vn","vt","ie","PointersOverlap","PointersMinDistance","PointersMaxDistance","RangeDragging","Data","Step","Round","Type","Theme","Disabled","KeyboardDisabled","AnimateOnClick","Vertical","Horizontal","convertRange","isNumber","getNumber","roundToStep","getBoolean","Pointer","getAttributesByRegex","stylePropertiesList","Styles","initPointerAPI","changePointersOrder","MAX_DEFAULT","ANIMATE_ON_CLICK_DEFAULT","Slider","range_slider_default","CindyJS","$17819f3fe548e987$var$equidistantNodes","degree","Array","fill","map","_","i","$17819f3fe548e987$var$chebyshevNodes","k","n","Math","cos","PI","$17819f3fe548e987$var$chebyshev01","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","length","id","resolved","Error","parcelRequire","register","JSON","parse","defineProperty","pow","r","t","enumerable","configurable","writable","value","Nn","min","max","a","b","x","temp","input","isNaN","parseFloat","isFinite","defaultValue","Number","num","step","round","val","trim","toLowerCase","$component","$pointer","index","arrowLeft","arrowRight","arrowUp","arrowDown","percent","disabled","pointerKeyDown","evt","key","preventDefault","dispatchEvent","CustomEvent","detail","nativeEvent","sendOnKeyDownEvent","pointerClicked","sendPointerClickedEvent","className","addEventListener","_disabled","classList","toggle","setAttribute","hasAttribute","removeAttribute","updatePosition","_percent","_leftWall","_rightWall","_type","_rightToLeft","_bottomToTop","percentPos","style","top","left","isClicked","$target","contains","setCallbacks","_arrowLeft","_arrowRight","_arrowUp","_arrowDown","setAttr","getAttr","getAttribute","destroy","removeEventListener","remove","regex","parseValue","Map","attr","attributes","valueProp","nodeName","test","replace","keyNum","set","$slider","pointers","theme","pointerShapes","stylesMap","removeClassesStartWith","prefix","$element","startsWith","removeClasses","$pointers","querySelectorAll","setTheme","add","updatePointerShapes","item","querySelector","getKey","setStyle","pointer","$styleHolder","has","delete","removeProperty","setProperty","getStyle","get","cssVariableName","attrName","apiProperty","list","cssVariableValue","apiProperties","indexOf","push","toString","propName","prototype","hasOwnProperty","call","ex","console","error","size","setPointerShapes","setPointerShape","slider","ariaLabelProp","pointerShapeProp","pointerDisabledProp","getTextValue","setValue","addPointer","_a","_b","setAriaLabel","styles","isDesc","$container","shadowRoot","prepend","append","pointersList","data","rangeDraggingStart","rangeDraggingDiff","selectedPointer","panelFill","pluginsManager","type","rightToLeft","bottomToTop","pointersOverlap","pointersMinDistance","pointersMaxDistance","rangeDragging","keyboardDisabled","animateOnClick","ariaLabels","onMouseDown","onValueChange","window","onMouseUp","sendMouseDownEvent","sendMouseUpEvent","getSelectedPointerIndex","findIndex","height","boxHeight","boxTop","getBoundingClientRect","mouseY","clientY","touches","width","boxWidth","boxLeft","mouseX","clientX","panelFillClicked","isPanelFillClicked","_dragPercent","stepPercent","getStepPercent","isPanelClicked","minDistance","minDistancePointer","distance","abs","getActivePointer","target","firstPointer","lastPointer","firstSmallerThanMin","lastGreaterThanMax","setPositions","foundIndex","focus","pointerMouseWheel","document","activeElement","stopPropagation","scrollTop","deltaY","rightOrBottom","shouldGoPrev","goPrev","goNext","pointerIndex","updatePlugins","update","percents","getPercents","values","getValues","getPointerElements","getNumericMin","getNumericMax","getData","getStep","getRound","getType","textMin","getMin","textMax","getMax","isRightToLeft","isBottomToTop","isPointersOverlap","getPointersMinDistance","getPointersMaxDistance","isRangeDraggingEnabled","isDisabled","isKeyboardDisabled","requestUpdatePlugins","_step","currentValue","diff","decimalPlaces","coeff","__pow","setDecimalPlaces","getPointerMin","getPointerMax","converted","getPointerLeftWall","getPointerRightWall","valueText","setAriaMinMax","transformed","value0","value1","sendChangeEvent","setAllPositions","setMin","_min","setMax","_max","setValues","_val","findValueIndexInData","setStep","setPointersOverlap","_pointersOverlap","setPointersMinDistance","_pointersMinDistance","setPointersMaxDistance","_pointersMaxDistance","setDisabled","setKeyboardDisabled","setData","_data","dataString","isArray","parts","split","allValuesAreNumbers","part","parseData","setType","$box","aria","setRightToLeft","setBottomToTop","setRound","_round","setAnimateOnClick","_animateOnClick","_ariaLabel","setRangeDragging","_rangeDragging","$fill","oneOnly","first","last","bottom","right","PanelFill","setMinMax","disabledList","initDisabled","ariaLabelsList","initAriaLabels","passive","setters","getters","plugins","defineSettersGetters","plugin","gettersAndSetters","name","initStyles","css","$style","innerHTML","init","tcRangeSliderPlugins","pluginFunc","onAttrChange","_attrName","_newValue","PluginsManager","getTextMin","getTextMax","_keyboardDisabled","getAriaLabel","len","$latestPointer","$newPointer","cloneNode","after","newPointer","removePointer","pop","HTMLElement","constructor","super","__publicField","this","attachShadow","mode","_theme","_c","rtl","_rtl","btt","_btt","externalCSSList","_externalCSSList","addCSS","sheet","createElement","textContent","appendChild","connectedCallback","linkHrefs","str","cssList","getExternalCSSList","linkHref","join","getElementById","from","initPointers","initPointerAPIs","_observer","MutationObserver","mutations","forEach","mutation","attributeName","newValue","found","find","_cssVariableName","_apiProperty","_regex","property","onAttributeChange","observe","disconnectedCallback","disconnect","tcRangeSlider","customElements","define","$17819f3fe548e987$export$2e2bcd8739ae039","minDegree","maxDegree","nodeGenerator","nodeGeneratorEquidistant","POSITIVE_INFINITY","getMinDegree","getMaxDegree","generateNodes","clampedDegree","nodes","static","$6f3f0fa0e8f48050$export$2e2bcd8739ae039","lights","direction","color","gamma","cameraSpace","getLights","$9f68392927753aad$var$csInit","$parcel$interopDefault","$9f68392927753aad$var$cdyInstanceDataMap","registerPlugin","api","cdy","instance","cdyData","onInit","defineFunction","$9f68392927753aad$export$2e2bcd8739ae039","element","canvas","intersectionAlgorithm","illumnimationModel","expression","twoSided","alpha","zoom","parameters","interpolationNodeGenerator","nodeGeneratorChebyshev","defineCindyScriptFunctions","setIntersectionAlgorithm","setIlluminationModel","setExpression","setTwoSided","setAlpha","setZoom","entries","setParameter","toCSTypeListOfNumbers","ctype","e","real","imag","toCSTypeListOfListOfNumbers","aa","args","evaluateAndVal","getIntersectionAlgorithm","getIlluminationModel","filter","getExpression","getTwoSided","getAlpha","getZoom","getParameter","getParameters","getParameterNames","evokeCS","hasTwoSides","algorithm","model","container","ownerDocument","newInstance","scripts","draw","mousedown","mouseup","animation","autoplay","use","ports","transform","visibleRect","Promise","resolve","parentElement","ResizeObserver","aspectRatio","surferCoreGpu","startup","$a7bbba3cb0f1438e$export$2e2bcd8739ae039","$f586a74b562d354c$exports","URL","import","meta","url","$ad2bcec7a0192558$var$sliderCssUrl","$ad2bcec7a0192558$var$lights","async","form","button","paramASlider","opacitySlider","zoomSlider","commonSliderAttributes","generateLabels","href","sliders","attrs","s","$ad2bcec7a0192558$var$createSliders","im","$396846989ff55184$export$2e2bcd8739ae039","IlluminationModels","Montag","create","submit","code","undefined","$ad2bcec7a0192558$var$init","then"],"version":3,"file":"index.988fbcfc.js.map"}