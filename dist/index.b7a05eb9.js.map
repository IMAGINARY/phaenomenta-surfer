{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-048c5c3681b1239c.js","src/main.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/surfer-core-gpu.mjs","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/CindyJS.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/polynomial-interpolation.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/montag.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/surfer-core-gpu.ts","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-4d1d9544effd53de.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-32df0cad799c97f3.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-a2d0750ae3d08ab7.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/node_modules/@parcel/runtime-js/lib/bundles/runtime-2eef9c0359ba2a11.js","node_modules/@imaginary-maths/surfer-js-core-gpu/dist/index.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/toolcool-range-slider/dist/toolcool-range-slider.min.js","node_modules/toolcool-range-slider/src/core/templates/main.html.js","node_modules/toolcool-range-slider/src/core/enums/attributes-enum.ts","node_modules/toolcool-range-slider/src/core/enums/type-enum.ts","node_modules/toolcool-range-slider/src/core/domain/math-provider.ts","node_modules/toolcool-range-slider/src/core/domain/events-provider.ts","node_modules/toolcool-range-slider/src/core/ui/pointer.ts","node_modules/toolcool-range-slider/src/core/dal/data-provider.ts","node_modules/toolcool-range-slider/src/core/ui/panel-fill.ts","node_modules/toolcool-range-slider/src/core/enums/css-vars-enum.ts","node_modules/toolcool-range-slider/src/core/domain/common-provider.ts","node_modules/toolcool-range-slider/src/core/ui/styles.ts","node_modules/toolcool-range-slider/src/core/enums/css-classes-enum.ts","node_modules/toolcool-range-slider/src/core/plugins/plugins-manager.ts","node_modules/toolcool-range-slider/src/core/domain/pointers-provider.ts","node_modules/toolcool-range-slider/src/core/ui/slider.ts","node_modules/toolcool-range-slider/src/core/domain/attributes-provider.ts","node_modules/toolcool-range-slider/src/core/app/range-slider.ts","node_modules/toolcool-range-slider/src/core/index.ts","node_modules/@parcel/runtime-js/lib/runtime-4897220ee418fe9d.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dd44675b7a05eb9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import \"toolcool-range-slider\";\nimport SurferCoreGpu from \"@imaginary-maths/surfer-js-core-gpu\";\n\nconst sliderCssUrl = new URL(\"slider.scss\", import.meta.url);\n\nfunction createSliders() {\n  const container = document.getElementById(\"sliders\");\n\n  const commonSliderAttributes = {\n    //    type: \"vertical\",\n    generateLabels: \"false\",\n    \"animate-onclick\": \"false\",\n    \"css-links\": sliderCssUrl.href,\n    theme: \"surfer\",\n    \"slider-width\": \"256px\",\n    \"slider-height\": \"0.7rem\",\n    //    \"slider-height\": \"512px\",\n    //    \"slider-width\": \"0.7rem\",\n  };\n\n  const paramASlider = document.createElement(\"tc-range-slider\");\n  paramASlider.setAttribute(\"min\", \"0.4\");\n  paramASlider.setAttribute(\"max\", \"1.2\");\n  paramASlider.setAttribute(\"step\", \"0.0001\");\n  paramASlider.setAttribute(\"value\", \"1.0\");\n\n  const opacitySlider = document.createElement(\"tc-range-slider\");\n  opacitySlider.setAttribute(\"min\", \"0.3\");\n  opacitySlider.setAttribute(\"max\", \"1\");\n  opacitySlider.setAttribute(\"step\", \"0.0001\");\n  opacitySlider.setAttribute(\"value\", \"0.75\");\n\n  const zoomSlider = document.createElement(\"tc-range-slider\");\n  zoomSlider.setAttribute(\"min\", \"-3\");\n  zoomSlider.setAttribute(\"max\", \"0.5\");\n  zoomSlider.setAttribute(\"step\", \"0.0001\");\n  zoomSlider.setAttribute(\"value\", \"-1\");\n\n  const sliders = [paramASlider, opacitySlider, zoomSlider];\n  const attrs = Object.entries(commonSliderAttributes);\n  sliders.forEach((s) => {\n    attrs.forEach(([name, value]) => s.setAttribute(name, value));\n    container.append(s);\n  });\n\n  return {\n    paramASlider,\n    opacitySlider,\n    zoomSlider,\n  };\n}\n\nconst lights = [\n  {\n    // light emulating a front side material #1\n    direction: [0, 0, -1],\n    color: [231 / 255, 49 / 255, 77 / 255],\n    gamma: 1,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a front side material #2\n    direction: [0, 0, -1],\n    color: [243 / 255, 179 / 255, 41 / 255],\n    gamma: 10,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a back side material #1\n    direction: [0, 0, 1],\n    color: [46 / 255, 127 / 255, 186 / 255],\n    gamma: 1,\n    cameraSpace: true,\n  },\n  {\n    // light emulating a back side material #2\n    direction: [0, 0, 1],\n    color: [98 / 255, 177 / 255, 114 / 255],\n    gamma: 10,\n    cameraSpace: true,\n  },\n  {\n    // light that is fixed in the scene #1\n    direction: [-10, 10, -2],\n    color: [0.63, 0.72, 0.27],\n    gamma: 5,\n    cameraSpace: false,\n  },\n  {\n    // light that is fixed in the scene #2\n    direction: [10, -8, 3],\n    color: [0.54, 0.09, 0.54],\n    gamma: 5,\n    cameraSpace: false,\n  },\n];\n\nasync function init() {\n  const form = document.getElementById(\"formula-form\") as HTMLFormElement;\n  const input = document.getElementById(\"formula\") as HTMLTextAreaElement;\n  const button = document.getElementById(\"go\");\n\n  const { paramASlider, opacitySlider, zoomSlider } = createSliders();\n\n  const im = new SurferCoreGpu.IlluminationModels.Montag(lights);\n\n  const container = document.getElementById(\"surfer-container\");\n  const surferCoreGpu = await SurferCoreGpu.create(container, 512, 512);\n  surferCoreGpu.setExpression(input.value);\n  surferCoreGpu.setParameter(\"a\", paramASlider.value);\n  surferCoreGpu.setZoom(Math.pow(2, zoomSlider.value));\n  surferCoreGpu.setAlpha(opacitySlider.value);\n  surferCoreGpu.element.classList.add(\"surface\");\n  surferCoreGpu.setIlluminationModel(im);\n\n  paramASlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setParameter(\"a\", evt.detail.value);\n  });\n\n  opacitySlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setAlpha(evt.detail.value);\n  });\n\n  zoomSlider.addEventListener(\"change\", (evt) => {\n    surferCoreGpu.setZoom(Math.pow(2, evt.detail.value));\n  });\n\n  const submit = () => surferCoreGpu.setExpression(input.value);\n  const submitByKey = (e) => (e.code === \"Enter\" ? submit() : undefined);\n  form.addEventListener(\"submit\", submit);\n  button.addEventListener(\"click\", submit);\n  input.addEventListener(\"keydown\", submitByKey);\n\n  window.addEventListener(\"message\", (evt) =>\n    surferCoreGpu.setExpression(evt.data)\n  );\n}\ninit().then();\n",null,"module.exports=CindyJS;",null,null,null,"module.exports = \"66faa69837fceed8\";","module.exports = \"e6d9450a79d31abd\";","module.exports = \"8ec35fb348c6cc02\";","module.exports = \"bf20b288e8c20562\";",null,"exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"export default (styles, linkHrefs) => { return ` ${ linkHrefs && linkHrefs.length > 0 ? linkHrefs.map(linkHref => `<link rel=\"stylesheet\" href=\"${ linkHref }\" />`).join('') : '' } <style> ${styles} </style> <div class=\"range-slider-box\"> <div class=\"row\"> <div id=\"range-slider\" class=\"range-slider\"> <div class=\"container\"> <div class=\"panel\"></div> <div class=\"panel-fill\"></div> <div class=\"container\"> <div class=\"pointer\" tabindex=\"0\" role=\"slider\"> <div class=\"pointer-shape\"></div> </div> </div> </div> </div> </div> </div>`; }; ","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const PointersOverlap = 'pointers-overlap';\nexport const PointersMinDistance = 'pointers-min-distance';\nexport const PointersMaxDistance = 'pointers-max-distance';\nexport const RangeDragging = 'range-dragging';\n\nexport const Data = 'data';\nexport const Min = 'min';\nexport const Max = 'max';\nexport const Step = 'step';\nexport const Round = 'round';\nexport const Type = 'type';\nexport const Theme = 'theme';\nexport const RightToLeft = 'rtl';\nexport const BottomToTop = 'btt';\n\nexport const Disabled = 'disabled';\nexport const KeyboardDisabled = 'keyboard-disabled';\n\nexport const SliderWidth = 'slider-width';\nexport const SliderHeight = 'slider-height';\nexport const SliderRadius = 'slider-radius';\n\nexport const SliderBg = 'slider-bg';\nexport const SliderBgHover = 'slider-bg-hover';\nexport const SliderBgFill = 'slider-bg-fill';\n\nexport const PointerWidth = 'pointer-width';\nexport const PointerHeight = 'pointer-height';\nexport const PointerRadius = 'pointer-radius';\nexport const PointerBg = 'pointer-bg';\nexport const PointerBgHover = 'pointer-bg-hover';\nexport const PointerBgFocus = 'pointer-bg-focus';\nexport const PointerShadow = 'pointer-shadow';\nexport const PointerShadowHover = 'pointer-shadow-hover';\nexport const PointerShadowFocus = 'pointer-shadow-focus';\nexport const PointerBorder = 'pointer-border';\nexport const PointerBorderHover = 'pointer-border-hover';\nexport const PointerBorderFocus = 'pointer-border-focus';\n\nexport const AnimateOnClick = 'animate-onclick';\nexport const CSSLinks = 'css-links';\n","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const Vertical = 'vertical';\nexport const Horizontal = 'horizontal';\n","/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n","import { getNumber, isNumber } from './math-provider';\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\ninterface IIndexable<T = any> { [key: string]: T }\n\nexport const sendPointerClickedEvent = ($component: HTMLElement, $pointer: HTMLElement) => {\n  $component.dispatchEvent(\n    new CustomEvent('onPointerClicked', {\n      detail: {\n        $pointer: $pointer,\n      },\n    })\n  );\n};\n\nexport const sendMouseDownEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendMouseUpEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseUp', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendOnKeyDownEvent = ($component: HTMLElement, evt: KeyboardEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onKeyDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendChangeEvent = (\n  $component: HTMLElement,\n  values: (string | number | undefined)[],\n) => {\n\n  if(!values || values.length <= 0) return;\n\n  const transformed = values.map(value => isNumber(value) ? getNumber(value, value) : value);\n\n  const detail: IIndexable = {\n    values: transformed || [],\n  };\n\n  detail.value = transformed[0];\n  detail.value0 = transformed[0];\n  detail.value1 = transformed[0];\n\n  for(let i=1; i<transformed.length; i++){\n    detail[`value${ i + 1 }`] = transformed[i];\n  }\n\n  $component.dispatchEvent(\n    new CustomEvent('change', {\n      detail,\n    })\n  );\n};","import * as TypeEnum from '../enums/type-enum';\nimport { sendOnKeyDownEvent, sendPointerClickedEvent } from '../domain/events-provider';\n\nexport interface IPointer {\n  readonly percent: number;\n  readonly $pointer: HTMLElement;\n\n  updatePosition: (percent: number, leftWall: number | undefined, rightWall: number | undefined, type: string, rightToLeft: boolean, bottomToTop: boolean) => void;\n\n  disabled: boolean;\n\n  isClicked: ($target: HTMLElement) => boolean;\n  setCallbacks: (\n    arrowLeft: (pointerIndex: number) => void,\n    arrowRight: (pointerIndex: number) => void,\n    arrowUp: (pointerIndex: number) => void,\n    arrowDown: (pointerIndex: number) => void\n  ) => void;\n\n  setAttr: (key: string, value: string | null | undefined) => void;\n  getAttr: (key: string) => string | null;\n\n  destroy: () => void;\n}\n\nexport const Pointer = ($component: HTMLElement, $pointer: HTMLElement, index: number) : IPointer => {\n\n  // the pointer value in % in the range [0, 100] -\n  // used to render the pointer position\n  let percent = 0;\n\n  let arrowLeft: (pointerIndex: number) => void;\n  let arrowRight: (pointerIndex: number) => void;\n  let arrowUp: (pointerIndex: number) => void;\n  let arrowDown: (pointerIndex: number) => void;\n\n  let disabled = false;\n\n  // -------------- APIs -------------------------\n  const updatePosition = (_percent: number, _leftWall: number | undefined, _rightWall: number | undefined, _type: string, _rightToLeft: boolean, _bottomToTop: boolean) => {\n    if(_rightWall !== undefined && _percent > _rightWall){\n      _percent = _rightWall;\n    }\n\n    if(_leftWall !== undefined && _percent < _leftWall){\n      _percent = _leftWall;\n    }\n\n    percent = _percent;\n    // $pointer.focus();\n\n    // the below code should not change the global pointer percent,\n    // only its position on the panel\n    let percentPos = percent;\n    if((_type === TypeEnum.Vertical && _bottomToTop) ||\n      (_type === TypeEnum.Horizontal && _rightToLeft)) {\n      percentPos = 100 - percentPos;\n    }\n\n    if (_type === TypeEnum.Vertical) {\n      $pointer.style.top = `${ percentPos }%`;\n    }\n    else {\n      $pointer.style.left = `${ percentPos }%`;\n    }\n  };\n\n  const isClicked = ($target: HTMLElement) => {\n    return $target === $pointer || $pointer.contains($target);\n  };\n\n  const setCallbacks = (\n    _arrowLeft: (pointerIndex: number) => void,\n    _arrowRight: (pointerIndex: number) => void,\n    _arrowUp: (pointerIndex: number) => void,\n    _arrowDown: (pointerIndex: number) => void\n  ) => {\n    arrowLeft = _arrowLeft;\n    arrowRight = _arrowRight;\n    arrowUp = _arrowUp;\n    arrowDown = _arrowDown;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $pointer.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $pointer.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($pointer.hasAttribute('aria-disabled')) {\n        $pointer.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setAttr = (key: string, value: string | null | undefined) => {\n    if(value === null || value === undefined){\n      $pointer.removeAttribute(key);\n    }\n    else{\n      $pointer.setAttribute(key, value);\n    }\n  };\n\n  const getAttr = (key: string) => {\n    return $pointer.getAttribute(key);\n  };\n\n  // -------------- Events ------------------------\n\n  const pointerKeyDown = (evt: KeyboardEvent) => {\n    if(disabled) return;\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        if(typeof arrowLeft === 'function'){\n          arrowLeft(index);\n        }\n        break;\n      }\n\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if(typeof arrowRight === 'function'){\n          arrowRight(index);\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        evt.preventDefault();\n        if(typeof arrowUp === 'function'){\n          arrowUp(index);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        if(typeof arrowDown === 'function'){\n          arrowDown(index);\n        }\n        break;\n      }\n    }\n\n    sendOnKeyDownEvent($component, evt);\n  };\n\n  const pointerClicked = () => {\n    if(disabled) return;\n    sendPointerClickedEvent($component, $pointer);\n  };\n\n  // ---------- Lifecycle ------------------------\n\n  (() => {\n    $pointer.className = `pointer pointer-${ index }`;\n\n    $pointer.addEventListener('keydown', pointerKeyDown);\n    $pointer.addEventListener('click', pointerClicked);\n  })();\n\n  const destroy = () => {\n    $pointer.removeEventListener('keydown', pointerKeyDown);\n    $pointer.removeEventListener('click', pointerClicked);\n    $pointer.remove();\n  };\n\n  return {\n    $pointer,\n\n    get percent() {\n      return percent;\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    updatePosition,\n\n    isClicked,\n    setCallbacks,\n    setAttr,\n    getAttr,\n\n    destroy,\n  };\n};\n\n","import { isNumber } from '../domain/math-provider';\n\nexport const parseData = (dataString: string | undefined | null): (string | number)[] | undefined => {\n  if (dataString === undefined || dataString === null) return undefined;\n\n  if(Array.isArray(dataString)) return dataString as (string | number)[];\n\n  const result = dataString.trim();\n  if (result === '') return undefined;\n\n  const parts = dataString.split(',');\n  const list: string[] = [];\n  let allValuesAreNumbers = true;\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i].trim();\n    if (part === '') continue;\n\n    list.push(part);\n\n    if (!isNumber(part)) {\n      allValuesAreNumbers = false;\n    }\n  }\n\n  if (!allValuesAreNumbers) return list;\n\n  return list.map((item) => Number(item));\n};\n\nexport const findValueIndexInData = (val: string | number, data: (string | number)[] | undefined) => {\n  return data ? data.findIndex((item) => item === val || item.toString().trim() === val.toString().trim()) : -1;\n};","import * as TypeEnum from '../enums/type-enum';\n\nexport interface IPanelFill {\n  updatePosition: (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => void;\n}\n\nexport const PanelFill = ($fill: HTMLElement) : IPanelFill => {\n\n  const updatePosition = (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => {\n\n    if(percents.length <= 0) return;\n\n    const oneOnly = percents.length === 1;\n    const first = percents[0] as number;\n    const last = percents[percents.length - 1] as number;\n\n    if (type === TypeEnum.Vertical) {\n      $fill.style.removeProperty('width');\n      $fill.style.removeProperty('right');\n      $fill.style.removeProperty('left');\n\n      if (!oneOnly) {\n        $fill.style.height = `${Math.abs(first - last)}%`;\n      }\n      else{\n        $fill.style.height = `${ first }%`;\n      }\n\n      if (bottomToTop) {\n        $fill.style.bottom = '0%';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(100 - last, 100 - first)}%`;\n        }\n        else{\n          $fill.style.top = 'auto';\n        }\n      }\n      else {\n        $fill.style.bottom = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(first, last)}%`;\n        }\n        else{\n          $fill.style.top = '0%';\n        }\n      }\n    }\n    else {\n      $fill.style.removeProperty('height');\n      $fill.style.removeProperty('top');\n      $fill.style.removeProperty('bottom');\n\n      if (!oneOnly) {\n        $fill.style.width = `${ Math.abs(first - last) }%`;\n      }\n      else{\n        $fill.style.width = `${ first }%`;\n      }\n\n      if (rightToLeft) {\n        $fill.style.right = '0%';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(100 - last, 100 - first) }%`;\n        }\n        else{\n          $fill.style.left = 'auto';\n        }\n      }\n      else {\n        $fill.style.right = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(first, last) }%`;\n        }\n        else{\n          $fill.style.left = '0%';\n        }\n      }\n    }\n  };\n\n  return {\n    updatePosition,\n  };\n};","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = '--animate-onclick';\nexport const SliderWidth = '--width';\nexport const SliderHeight = '--height';\nexport const SliderRadius = '--panel-bg-border-radius';\n\nexport const SliderBg = '--panel-bg';\nexport const SliderBgHover = '--panel-bg-hover';\nexport const SliderBgFill = '--panel-bg-fill';\n\nexport const PointerWidth = '--pointer-width';\nexport const PointerHeight = '--pointer-height';\nexport const PointerRadius = '--pointer-border-radius';\nexport const PointerBg = '--pointer-bg';\nexport const PointerBgHover = '--pointer-bg-hover';\nexport const PointerBgFocus = '--pointer-bg-focus';\nexport const PointerShadow = '--pointer-shadow';\nexport const PointerShadowHover = '--pointer-shadow-hover';\nexport const PointerShadowFocus = '--pointer-shadow-focus';\nexport const PointerBorder = '--pointer-border';\nexport const PointerBorderHover = '--pointer-border-hover';\nexport const PointerBorderFocus = '--pointer-border-focus';\n","import * as AttributesEnum from '../enums/attributes-enum';\nimport { getNumber } from './math-provider';\n\nexport const getAttributesByRegex = <T>($component: HTMLElement, regex: RegExp, parseValue?: (val: string) => T) : Map<number, T> => {\n\n  const map = new Map<number, T>();\n\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace(/\\D/g, '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = parseValue && typeof parseValue === 'function' ? parseValue(attr.value) : attr.value;\n    map.set(keyNum, value as T);\n  }\n\n  return map;\n};\n\nexport const getExternalCSSList = ($component: HTMLElement) => {\n  if(!$component) return null;\n\n  const str = $component.getAttribute(AttributesEnum.CSSLinks);\n  if(!str) return null;\n\n  const parts = str.split(';');\n  const cssList: string[] = [];\n\n  for(const part of parts){\n    if(part.trim() === '') continue;\n    cssList.push(part.trim());\n  }\n\n  return cssList;\n};","import * as AttributesEnum from '../enums/attributes-enum';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport { IPointer } from './pointer';\nimport { getAttributesByRegex } from '../domain/common-provider';\n\nexport interface IStyles {\n\n  setStyle: (key: string, value: string | null | undefined, index: number) => void;\n  getStyle: (key: string, index: number) => string | undefined;\n\n  theme: string | null;\n  readonly pointerShapes: (string | null)[];\n  setPointerShape: (index: number, value: string | null) => void;\n}\n\nexport const stylePropertiesList: [string, string, string, RegExp | null][] = [\n  [CSSVariables.SliderWidth, AttributesEnum.SliderWidth, 'sliderWidth', null],\n  [CSSVariables.SliderHeight, AttributesEnum.SliderHeight, 'sliderHeight', null],\n  [CSSVariables.SliderRadius, AttributesEnum.SliderRadius, 'sliderRadius', null],\n\n  [CSSVariables.SliderBg, AttributesEnum.SliderBg, 'sliderBg', null],\n  [CSSVariables.SliderBgHover, AttributesEnum.SliderBgHover, 'sliderBgHover', null],\n  [CSSVariables.SliderBgFill, AttributesEnum.SliderBgFill, 'sliderBgFill', null],\n\n  [CSSVariables.PointerWidth, AttributesEnum.PointerWidth, 'pointer#Width', /^pointer([0-9]*)-width$/], // pointer-width, pointer2-width, ...\n  [CSSVariables.PointerHeight, AttributesEnum.PointerHeight, 'pointer#Height', /^pointer([0-9]*)-height$/], // pointer-height$, pointer2-height, ...\n  [CSSVariables.PointerRadius, AttributesEnum.PointerRadius, 'pointer#Radius', /^pointer([0-9]*)-radius$/], // pointer-radius, pointer2-radius, ...\n  [CSSVariables.PointerBg, AttributesEnum.PointerBg, 'pointer#Bg', /^pointer([0-9]*)-bg$/], // pointer-bg, pointer2-bg, ...\n  [CSSVariables.PointerBgHover, AttributesEnum.PointerBgHover, 'pointer#BgHover', /^pointer([0-9]*)-bg-hover$/], // pointer-bg-hover, pointer2-bg-hover, ...\n  [CSSVariables.PointerBgFocus, AttributesEnum.PointerBgFocus, 'pointer#BgFocus', /^pointer([0-9]*)-bg-focus$/], // pointer-bg-focus, pointer2-bg-focus, ...\n  [CSSVariables.PointerShadow, AttributesEnum.PointerShadow, 'pointer#Shadow', /^pointer([0-9]*)-shadow$/], // pointer-shadow, pointer2-shadow, ...\n  [CSSVariables.PointerShadowHover, AttributesEnum.PointerShadowHover, 'pointer#ShadowHover', /^pointer([0-9]*)-shadow-hover$/], // pointer-shadow-hover, pointer2-shadow-hover, ...\n  [CSSVariables.PointerShadowFocus, AttributesEnum.PointerShadowFocus, 'pointer#ShadowFocus', /^pointer([0-9]*)-shadow-focus$/], // pointer-shadow-focus, pointer2-shadow-focus, .\n  [CSSVariables.PointerBorder, AttributesEnum.PointerBorder, 'pointer#Border', /^pointer([0-9]*)-border$/], // pointer-border, pointer2-border, ...\n  [CSSVariables.PointerBorderHover, AttributesEnum.PointerBorderHover, 'pointer#BorderHover', /^pointer([0-9]*)-border-hover$/], // pointer-border-hover, pointer2-border-hover, ...\n  [CSSVariables.PointerBorderFocus, AttributesEnum.PointerBorderFocus, 'pointer#BorderFocus', /^pointer([0-9]*)-border-focus$/], // pointer-border-focus, pointer2-border-focus, ...\n];\n\nexport const Styles = ($component: HTMLElement, $slider: HTMLElement, pointers: IPointer[]) : IStyles => {\n\n  let theme: string | null = null;\n  const pointerShapes: (string | null)[] = [];\n  const stylesMap: Map<string, string> = new Map();\n\n  // ----- SETTERS ---------------------------\n\n  const removeClassesStartWith = (prefix: string, $element = $slider) => {\n    const classList = [...$element.classList];\n    for(const className of classList){\n      if(className.startsWith(prefix)){\n        $slider.classList.remove(className);\n      }\n    }\n  };\n\n  const removeClasses = () => {\n    // remove shape classes from $slider\n    removeClassesStartWith('shape');\n\n    // remove shape classes from pointers (if there are any)\n    const $pointers = $slider.querySelectorAll('.pointer');\n    for(const $pointer of $pointers){\n      removeClassesStartWith('shape', $pointer as HTMLElement);\n    }\n  };\n\n  const setTheme = (val: string | null) => {\n    theme = val;\n    removeClassesStartWith('theme-');\n\n    if(typeof val === 'string'){\n      $slider.classList.add(`theme-${ val }`);\n    }\n  };\n\n  const updatePointerShapes = () => {\n    removeClasses();\n\n    if(pointerShapes.length <= 0) return;\n\n    // first shape is added to the slider, as it should be applied on all pointers (potentially)\n    $slider.classList.add('shape', `shape-${ pointerShapes[0] }`);\n\n    // other shapes should be added to the relevant pointers each;\n    for(let i=1; i<pointerShapes.length; i++){\n      const item = pointerShapes[i];\n      if(!item) continue;\n\n      const $pointer = $slider.querySelector(`.pointer-${ i }`);\n      if(!$pointer) continue;\n\n      $pointer.classList.add('shape', `shape-${ item }`);\n    }\n  };\n\n  const setPointerShape = (index: number, value: string) => {\n    pointerShapes[index] = value;\n    updatePointerShapes();\n  };\n\n  const setPointerShapes = () => {\n\n    removeClasses();\n\n    // pointer-shape, pointer2-shape, ...\n    const list = getAttributesByRegex($component, /^pointer([0-9]*)-shape$/);\n    if(list.size <= 0) return;\n\n    // save shapes to the list that can be used for the getter APIs later\n    for(const item of list){\n      const index = item[0] as number;\n      pointerShapes[index] = item[1] as string;\n    }\n\n    updatePointerShapes();\n  };\n\n  const getKey = (key: string, index: number) => {\n    return `${ key }-${ index }`;\n  };\n\n  const setStyle = (key: string, value: string | null | undefined, index: number) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    const $styleHolder = index === 0 ? $slider : pointer.$pointer;\n\n    if(value === null || value === undefined){\n      if(stylesMap.has(getKey(key, index))){\n        stylesMap.delete(getKey(key, index));\n      }\n      $styleHolder.style.removeProperty(key);\n      return;\n    }\n\n    stylesMap.set(getKey(key, index), value);\n    $styleHolder.style.setProperty(key, value);\n  };\n\n  const getStyle = (key: string, index: number) => {\n    return stylesMap.get(getKey(key, index));\n  };\n\n  // ---- initialization ---------------------\n  (() => {\n\n    for(const item of stylePropertiesList){\n\n      // '--pointer-width', 'pointer-width', 'pointerWidth', regex or null\n      const [cssVariableName, attrName, apiProperty, regex] = item;\n\n      // apply the styles via CSS variables;\n      // if index = 0 ---> apply the style on the whole slider, so all\n      // pointers will inherit it;\n      // otherwise, apply styles on the individual pointers;\n      if(regex){\n        const list = getAttributesByRegex($component, regex);\n        for(const item of list){\n          const index = item[0];\n          const value = item[1] as string;\n          setStyle(cssVariableName, value, index);\n        }\n      }\n      else{\n        const cssVariableValue = $component.getAttribute(attrName);\n        setStyle(cssVariableName, cssVariableValue, 0);\n      }\n\n      // add APIs --------------------------\n      const apiProperties: [string, number][] = [];\n\n      if(apiProperty.indexOf('#') === -1){\n        apiProperties.push([apiProperty, 0]);\n      }\n      else{\n        apiProperties.push([apiProperty.replace('#', ''), 0]);\n        apiProperties.push([apiProperty.replace('#', '0'), 0]);\n        apiProperties.push([apiProperty.replace('#', '1'), 0]);\n        for(let i=1; i<pointers.length; i++){\n          apiProperties.push([apiProperty.replace('#', (i + 1).toString()), i]);\n        }\n      }\n\n      for(const item of apiProperties){\n        try{\n          const propName = item[0];\n          const index = item[1];\n\n          if(!Object.prototype.hasOwnProperty.call($component, propName)){\n            Object.defineProperty($component, propName, {\n              get () {\n                return getStyle(cssVariableName, index);\n              },\n\n              set: (val) => {\n                setStyle(cssVariableName, val, index);\n              },\n            });\n          }\n        }\n        catch (ex){\n          console.error(ex);\n        }\n      }\n    }\n\n    setTheme($component.getAttribute(AttributesEnum.Theme));\n    setPointerShapes();\n  })();\n\n  return {\n    setStyle,\n    getStyle,\n\n    get theme() {\n      return theme;\n    },\n\n    set theme(val){\n      setTheme(val);\n    },\n\n    get pointerShapes() {\n      return pointerShapes;\n    },\n\n    setPointerShape,\n  };\n};","/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = 'animate-on-click';\nexport const RangeDragging = 'range-dragging';\n","import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from './interfaces';\n\ndeclare global {\n  interface Window {\n    tcRangeSliderPlugins: (() => IPlugin)[];\n    tcRangeSliderObservedAttr: string[];\n  }\n}\n\nexport interface IPluginsManager {\n  init: () => void;\n\n  update: (data: IPluginUpdateData) => void;\n\n  onAttrChange: (attrName: string, newValue: string) =>  void;\n\n  destroy: () => void;\n}\n\nexport const PluginsManager = (\n  $component: HTMLElement,\n  requestUpdatePlugins: () => void,\n  setters: IPluginSetters,\n  getters: IPluginGetters,\n) : IPluginsManager => {\n\n  const plugins: IPlugin[] = [];\n\n  // ------ APIs ----------------------------\n\n  const update = (data: IPluginUpdateData) => {\n    for(const plugin of plugins){\n      if(plugin.update && typeof plugin.update === 'function'){\n        plugin.update(data);\n      }\n    }\n  };\n\n  const destroy = () => {\n    for(const plugin of plugins){\n      if(plugin.destroy && typeof plugin.destroy === 'function'){\n        plugin.destroy();\n      }\n    }\n  };\n\n  const onAttrChange = (_attrName: string, _newValue: string) => {\n    for(const plugin of plugins){\n      if(plugin.onAttrChange && typeof plugin.onAttrChange === 'function'){\n        plugin.onAttrChange(\n          _attrName,\n          _newValue\n        );\n      }\n    }\n  };\n\n  const defineSettersGetters = (plugin: IPlugin) => {\n    if(!plugin.gettersAndSetters) return;\n\n    for(const item of plugin.gettersAndSetters){\n      if(!item.name || !item.attributes) continue;\n\n      try{\n        if(!Object.prototype.hasOwnProperty.call($component, item.name)){\n          Object.defineProperty($component, item.name, item.attributes);\n        }\n      }\n      catch (ex){\n        console.error('defineSettersGetters error:', ex);\n      }\n    }\n  };\n\n  const initStyles = (plugin: IPlugin) => {\n    if(!plugin.css) return;\n\n    const $style = $component.shadowRoot?.querySelector('style');\n    if(!$style) return;\n\n    $style.innerHTML += plugin.css;\n  };\n\n  // ------ initialization ------------------\n  const init = () => {\n    if(!window.tcRangeSliderPlugins) return;\n\n    for(const pluginFunc of window.tcRangeSliderPlugins){\n      const plugin = pluginFunc();\n      plugins.push(plugin);\n\n      if(plugin.init && typeof plugin.init === 'function'){\n\n        // call plugin initialization function\n        plugin.init(\n          $component,\n          requestUpdatePlugins,\n          setters,\n          getters,\n        );\n\n        // if plugin has getters and setters that used for APIs ---> define them\n        defineSettersGetters(plugin);\n\n        // if plugin has css rules defined as plain text ---> they can be added dynamically\n        initStyles(plugin);\n      }\n    }\n  };\n\n  return {\n    init,\n    update,\n    onAttrChange,\n    destroy,\n  };\n};","import { getNumber, isNumber } from './math-provider';\nimport { IPointer, Pointer } from '../ui/pointer';\nimport { ISlider } from '../ui/slider';\n\nexport const MAX_VALUES_API = 10;\n\nexport const initPointers = ($component: HTMLElement, $pointer: HTMLElement) => {\n  const map = new Map<number, number | string>();\n  const regex = /^value([0-9]*)$/;\n\n  // collect data about key / value pairs: value=50, value2=70, etc.\n  // value = value0 = value1 (all these are aliases of each other)\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace('value', '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = isNumber(attr.value) ? getNumber(attr.value, 0) : attr.value;\n\n    map.set(keyNum, value);\n  }\n\n  // find the max value number in the map\n  const max = Math.max(...Array.from(map.keys()));\n  const pointers: [IPointer, string | number | undefined][] = [];\n\n  // first pointer always exists\n  pointers.push([Pointer($component, $pointer, 0), map.get(0)]);\n\n  // add all other pointers\n  let $latestPointer = $pointer;\n\n  for(let i=1; i<=max; i++){\n    const $newPointer = $pointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n\n    $latestPointer = $newPointer;\n    pointers.push([Pointer($component, $newPointer, i), map.get(i)]);\n  }\n\n  return pointers;\n};\n\nexport const initPointerAPI = (\n  $component: HTMLElement,\n  slider: ISlider,\n  index: number,\n  valueProp: string,\n  ariaLabelProp: string,\n  pointerShapeProp: string,\n  pointerDisabledProp: string\n) => {\n\n  try{\n\n    // `value${ index + 1 }`: value, value0, value1, value2, etc.\n    Object.defineProperty($component, valueProp, {\n      configurable: true,\n      get () {\n        if(!slider) return undefined;\n\n        const pointer = slider.pointers[index];\n        if(!pointer) return undefined;\n\n        const val = slider.getTextValue(pointer.percent);\n        return isNumber(val) ? getNumber(val, val) : val;\n      },\n\n      set: (val) => {\n        const pointer = slider.pointers[index];\n        if(!pointer){\n          slider?.addPointer(val);\n        }\n        else{\n          slider?.setValue(val, index);\n        }\n      },\n    });\n\n    // `ariaLabel${ index + 1 }`\n    Object.defineProperty($component, ariaLabelProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index]?.getAttr('aria-label') ?? undefined;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n        slider.setAriaLabel(index, val);\n      },\n    });\n\n    // `pointerShape${ index + 1 }`\n    Object.defineProperty($component, pointerShapeProp, {\n      configurable: true,\n      get () {\n        return slider?.styles?.pointerShapes[index] ?? null;\n      },\n\n      set: (val) => {\n        if(!slider || !slider.styles) return;\n        slider.styles.setPointerShape(index, val);\n      },\n    });\n\n    // `pointer${ index + 1 }Disabled`\n    Object.defineProperty($component, pointerDisabledProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index].disabled ?? false;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n\n        const pointer = slider?.pointers[index];\n        if(!pointer) return;\n\n        pointer.disabled = val;\n      },\n    });\n  }\n  catch (ex){\n    console.error(ex);\n  }\n};\n\nexport const initPointerAPIs = ($component: HTMLElement, slider: ISlider) => {\n\n  const apiProperties: [string, string, string, string, number][] = [\n    ['value', 'ariaLabel', 'pointerShape', 'pointerDisabled', 0],\n    ['value0', 'ariaLabel0', 'pointerShape0', 'pointer0Disabled', 0],\n    ['value1', 'ariaLabel1', 'pointerShape1', 'pointer1Disabled', 0],\n  ];\n\n  // The maximum number of such pointers is determined by the MAX_VALUES_API API constant (for performance reasons).\n  // https://github.com/toolcool-org/toolcool-range-slider/issues/2\n  for(let i=2; i<MAX_VALUES_API; i++){\n    apiProperties.push([`value${ i }`, `ariaLabel${ i }`, `pointer${ i }Shape`, `pointer${ i }Disabled`, i - 1]);\n  }\n\n  for(const item of apiProperties){\n    initPointerAPI($component,\n      slider,\n      item[4],\n      item[0],\n      item[1],\n      item[2],\n      item[3]\n    );\n  }\n\n};\n\n\nexport const changePointersOrder = (pointers: IPointer[], isDesc: boolean, $component: HTMLElement) => {\n\n  const $container = $component.shadowRoot?.querySelector('.container') as HTMLElement\n  if(!$container) return;\n\n  for(const pointer of pointers){\n    if(isDesc){\n      $container.prepend(pointer.$pointer);\n    }\n    else{\n      $container.append(pointer.$pointer);\n    }\n  }\n};\n","import { IPointer, Pointer } from './pointer';\nimport { convertRange, getBoolean, getNumber, isNumber, roundToStep, setDecimalPlaces } from '../domain/math-provider';\nimport * as AttributesEnum from '../enums/attributes-enum';\nimport { TData, TStep } from '../types';\nimport { findValueIndexInData, parseData } from '../dal/data-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { IPanelFill, PanelFill } from './panel-fill';\nimport { sendChangeEvent, sendMouseDownEvent, sendMouseUpEvent } from '../domain/events-provider';\nimport { IStyles, Styles } from './styles';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport * as CssClasses from '../enums/css-classes-enum';\nimport { getAttributesByRegex } from '../domain/common-provider';\nimport { IPluginsManager, PluginsManager } from '../plugins/plugins-manager';\nimport { changePointersOrder } from '../domain/pointers-provider';\n\nexport interface ISlider {\n  readonly pointers: IPointer[];\n  readonly styles: IStyles | null;\n  readonly pluginsManager: IPluginsManager | null;\n\n  pointersOverlap: boolean;\n  pointersMinDistance: number;\n  pointersMaxDistance: number;\n  rangeDragging: boolean;\n\n  readonly min: number | string;\n  readonly max: number | string;\n  readonly step: TStep;\n  readonly data: TData;\n\n  type: string;\n  rightToLeft: boolean;\n  bottomToTop: boolean;\n  disabled: boolean;\n  keyboardDisabled: boolean;\n  round: number;\n  animateOnClick: string | undefined | boolean;\n\n  getAriaLabel: (index: number) => (string | undefined);\n  setAriaLabel: (index: number, ariaLabel: string | undefined) => void;\n\n  setMin: (value: number | string | undefined | null) => void;\n  setMax: (value: number | string | undefined | null) => void;\n  setValue: (value: number | string | undefined | null, index: number) => void;\n  setStep: (value: TStep | string) => void;\n  setData: (value: TData | string | null | number) => void;\n  getTextValue: (_percent: number | undefined) => undefined | string | number;\n\n  addPointer: (value: number | string | undefined | null) => number;\n  removePointer: () => number;\n\n  destroy: () => void;\n}\n\nexport const MIN_DEFAULT = 0;\nexport const MAX_DEFAULT = 100;\nexport const ROUND_DEFAULT = 2;\nexport const ANIMATE_ON_CLICK_DEFAULT = '0.3s';\n\nexport const Slider = ($component: HTMLElement, $slider: HTMLElement, pointersList: [IPointer, string | number | undefined][]) : ISlider => {\n\n  const pointers = pointersList.map(item => item[0]);\n  let selectedPointer: IPointer | null | undefined = null;\n  let panelFill: IPanelFill | null = null;\n  let styles: IStyles | null = null;\n  let pluginsManager: IPluginsManager | null = null;\n\n  let min = MIN_DEFAULT;\n  let max = MAX_DEFAULT;\n  let step: TStep = undefined; // step is defined in absolute units (not percent!)\n  let data: TData = undefined;\n  let type: string = TypeEnum.Horizontal;\n  let round: number = ROUND_DEFAULT;\n  let rightToLeft = false;\n  let bottomToTop = false;\n\n  let pointersOverlap = false;\n  let pointersMinDistance = 0;\n  let pointersMaxDistance = Infinity;\n\n  let rangeDragging = false;\n\n  let rangeDraggingStart: number | undefined = undefined;\n  let rangeDraggingDiff: number | undefined = undefined;\n\n  let disabled = false;\n  let keyboardDisabled = false;\n  let animateOnClick: string | undefined = ANIMATE_ON_CLICK_DEFAULT;\n\n  const ariaLabels: (string | undefined)[] = [];\n\n  // -------------- EVENTS --------------------\n\n  const onMouseDown = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    onValueChange(evt);\n\n    window.addEventListener('mousemove', onValueChange);\n    window.addEventListener('mouseup', onMouseUp);\n\n    sendMouseDownEvent($component, evt);\n  };\n\n  const onMouseUp = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    rangeDraggingStart = undefined;\n    rangeDraggingDiff = undefined;\n\n    window.removeEventListener('mousemove', onValueChange);\n    window.removeEventListener('mouseup', onValueChange);\n\n    if(animateOnClick){\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n\n    sendMouseUpEvent($component, evt);\n  };\n\n  const getActivePointer = ($target: HTMLElement, percent: number) => {\n    if(pointers.length <= 0) return;\n\n    // if only 1 pointer exists --> return it\n    if(pointers.length === 1){\n      if(pointers[0].isClicked($target) && animateOnClick){\n        $slider.classList.remove(CssClasses.AnimateOnClick);\n      }\n\n      return pointers[0];\n    }\n\n    const panelFillClicked = isPanelFillClicked($target);\n\n    if(rangeDragging){\n\n      let _dragPercent = percent;\n      const stepPercent = getStepPercent(_dragPercent);\n      if(stepPercent !== undefined){\n        _dragPercent = roundToStep(_dragPercent, stepPercent);\n      }\n\n      if(panelFillClicked){\n        rangeDraggingStart = _dragPercent;\n        rangeDraggingDiff = 0;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n      }\n      else{\n        if(rangeDraggingStart !== undefined){\n          rangeDraggingDiff = _dragPercent - rangeDraggingStart;\n          rangeDraggingStart = _dragPercent;\n        }\n      }\n    }\n\n    if(!isPanelClicked($target) && !panelFillClicked){\n\n      // if clicked directly on 1 of the pointers ---> return it\n      for(const pointer of pointers){\n        if(!pointer.isClicked($target)) continue;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer;\n      }\n\n      // if already selected pointer ---> return it\n      for(const pointer of pointers){\n        if(selectedPointer === pointer) return pointer;\n      }\n    }\n\n    // find the closest pointer and return it\n    let minDistance = Infinity;\n    let minDistancePointer = null;\n\n    for(const pointer of pointers){\n      const distance = Math.abs(percent - pointer.percent);\n      if(distance < minDistance){\n        minDistance = distance;\n        minDistancePointer = pointer;\n      }\n    }\n\n    return minDistancePointer;\n  };\n\n  const getSelectedPointerIndex = () => {\n    return pointers.findIndex(pointer => selectedPointer === pointer && !pointer.disabled);\n  };\n\n  const onValueChange = (evt: MouseEvent | TouchEvent) => {\n\n    // find the percent [0, 100] of the current mouse position in vertical or horizontal slider\n    let percent;\n\n    if(type === TypeEnum.Vertical){\n      const { height: boxHeight, top: boxTop } = $slider.getBoundingClientRect();\n      const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n      const top = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n      percent = (top * 100) / boxHeight;\n    }\n    else{\n      const { width: boxWidth, left: boxLeft } = $slider.getBoundingClientRect();\n      const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n      const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n      percent = (left * 100) / boxWidth;\n    }\n\n    if(rightToLeft || bottomToTop){\n      percent = 100 - percent;\n    }\n\n    selectedPointer = getActivePointer(evt.target as HTMLElement, percent);\n\n    // handle range dragging\n    if(rangeDragging && pointers.length > 1 && rangeDraggingDiff !== undefined){\n\n      const firstPointer = pointers[0];\n      const lastPointer = pointers[pointers.length - 1];\n\n      const firstSmallerThanMin = firstPointer.percent + rangeDraggingDiff < 0;\n      const lastGreaterThanMax = lastPointer.percent + rangeDraggingDiff > 100;\n      if(firstSmallerThanMin || lastGreaterThanMax) return;\n\n      for(let i=0; i<pointers.length; i++){\n        setPositions(i, pointers[i].percent + rangeDraggingDiff);\n      }\n\n      return;\n    }\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex !== -1){\n      setPositions(foundIndex, percent);\n      selectedPointer?.$pointer.focus();\n    }\n  };\n\n  const pointerMouseWheel = (evt: WheelEvent) => {\n    if (disabled ||\n      document.activeElement !== $component ||\n      selectedPointer?.disabled) return;\n\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const scrollTop = evt.deltaY < 0;\n    const rightOrBottom = rightToLeft || bottomToTop;\n    const shouldGoPrev = scrollTop ? !rightOrBottom : rightOrBottom;\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex === -1) return;\n\n    if(shouldGoPrev){\n      goPrev(foundIndex, pointers[foundIndex].percent);\n    }\n    else{\n      goNext(foundIndex, pointers[foundIndex].percent);\n    }\n  };\n\n  // -------------- Arrows --------------------\n\n  const arrowLeft = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowRight = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowUp = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go forwards\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n  };\n\n  const arrowDown = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n  };\n\n  // -------------- Helpers ------------------------\n\n  const isPanelClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel');\n  };\n\n  const isPanelFillClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel-fill');\n  };\n\n  const goPrev = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent -= stepPercent;\n\n    if(_percent < 0){\n      _percent = 0;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const goNext = (index: number, _percent: number | undefined) => {\n\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent += stepPercent;\n\n    if(_percent > 100){\n      _percent = 100;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const updatePlugins = () => {\n\n    if(!pluginsManager) return;\n    pluginsManager.update({\n      percents: getPercents(),\n      values: getValues(),\n      $pointers: getPointerElements(),\n\n      min: getNumericMin(),\n      max: getNumericMax(),\n\n      data: getData(),\n      step: getStep(),\n      round: getRound(),\n      type: getType(),\n\n      textMin: getMin(),\n      textMax: getMax(),\n\n      rightToLeft: isRightToLeft(),\n      bottomToTop: isBottomToTop(),\n\n      pointersOverlap: isPointersOverlap(),\n      pointersMinDistance: getPointersMinDistance(),\n      pointersMaxDistance: getPointersMaxDistance(),\n      rangeDragging: isRangeDraggingEnabled(),\n\n      disabled: isDisabled(),\n      keyboardDisabled: isKeyboardDisabled(),\n    });\n  };\n\n  const requestUpdatePlugins = () => {\n    updatePlugins();\n  };\n\n  // -------------- Getters --------------------\n\n  const getPointerLeftWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === 0){\n      // by default 0, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n    else{\n      // by default previous pointer, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n  };\n\n  const getPointerRightWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === pointers.length - 1){\n      // by default 100, but if min distance between pointers is defined --->\n      // then the distance to the previous pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n    else{\n      // distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n  };\n\n  /**\n   * user step is defined in absolute values;\n   * this function return it as %\n   */\n  const getStepPercent = (_percent: number) => {\n\n    let _step: number | undefined | null;\n\n    if(typeof step === 'function'){\n      // convert percent to value: [0, 100] to [min, max]\n      const currentValue = convertRange(0, 100, min, max, _percent);\n\n      // the slider function provided by user should return an absolute value, not %\n      _step = step(currentValue, _percent);\n    }\n    else{\n      // the step value provided by the user should be absolute value (not %), undefined, or null\n      _step = step;\n    }\n\n    // round percent to step\n    if(isNumber(_step)){\n\n      /*\n      min ......... max (step = 1)\n      0 ........... 100 (step = ?)\n\n      (max - min) ....... step (=1)\n      100 ............... ?\n\n      ? = 100 * step / (max - min)\n      */\n\n      const diff = max - min;\n      _step = diff === 0 ? 0 :  (_step as number) * 100 / diff;\n\n      return _step;\n    }\n\n    return undefined;\n  };\n\n  const getTextValue = (_percent: number | undefined) => {\n    if(_percent === undefined) return undefined;\n\n    const val = convertRange(0, 100, min, max, _percent);\n\n    if(data !== undefined){\n      return data[Math.round(val)];\n    }\n\n    return setDecimalPlaces(val, round);\n  };\n\n  const getMin = () => {\n\n    if(data !== undefined){\n      return data[min];\n    }\n\n    return min;\n  };\n\n  const getMax = () => {\n\n    if(data !== undefined){\n      return data[max];\n    }\n\n    return max;\n  };\n\n  const getStep = () => {\n    return step;\n  };\n\n  const getPointerMin = (index: number) => {\n    if(index <= 0 || pointersOverlap) return getMin();\n    return getTextValue(pointers[index - 1].percent) ?? '';\n  };\n\n  const getPointerMax = (index: number) => {\n    if(pointers.length <= 1 ||\n      index >= pointers.length - 1 ||\n      pointersOverlap) return getMax();\n\n    return getTextValue(pointers[index + 1].percent) ?? '';\n  };\n\n  const getPercents = () => {\n    return pointers.map(pointer => pointer.percent);\n  };\n\n  const getValues = () => {\n    return pointers.map(pointer => getTextValue(pointer.percent));\n  }\n\n  const getPointerElements = () => {\n    return pointers.map(pointer => pointer.$pointer);\n  };\n\n  const getNumericMin = () => {\n    return min;\n  };\n\n  const getNumericMax = () => {\n    return max;\n  };\n\n  const getData = () => {\n    return data;\n  };\n\n  const getType = () => {\n    return type;\n  };\n\n  const getRound = () => {\n    return round;\n  };\n\n  const getPointersMinDistance = () => {\n    return pointersMinDistance;\n  };\n\n  const getPointersMaxDistance = () => {\n    return pointersMaxDistance;\n  };\n\n  const getAriaLabel = (index: number) => {\n    return ariaLabels[index];\n  };\n\n  const isRightToLeft = () => {\n    return rightToLeft;\n  };\n\n  const isBottomToTop = () => {\n    return bottomToTop;\n  };\n\n  const isDisabled = () => {\n    return disabled;\n  };\n\n  const isKeyboardDisabled = () => {\n    return keyboardDisabled;\n  };\n\n  const isPointersOverlap = () => {\n    return pointersOverlap;\n  };\n\n  const isRangeDraggingEnabled = () => {\n    return rangeDragging;\n  };\n\n  // -------------- Setters --------------------\n\n  const setPositions = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    // round percent to step\n    const stepPercent = getStepPercent(_percent);\n\n    if(stepPercent !== undefined){\n      _percent = roundToStep(_percent, stepPercent);\n    }\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.updatePosition(_percent, getPointerLeftWall(index), getPointerRightWall(index), type, rightToLeft, bottomToTop);\n    panelFill?.updatePosition(type, pointers.map(pointer => pointer.percent), rightToLeft, bottomToTop);\n\n    updatePlugins();\n\n    for(const pointer of pointers){\n      const valueText = getTextValue(pointer.percent);\n      if(valueText !== undefined){\n        pointer.setAttr('aria-valuenow', valueText.toString());\n        pointer.setAttr('aria-valuetext', valueText.toString());\n      }\n    }\n\n    setAriaMinMax();\n\n    sendChangeEvent($component, pointers.map(pointer => getTextValue(pointer.percent)));\n  };\n\n  const setAllPositions = () => {\n    for(let i=0; i<pointers.length; i++){\n      setPositions(i, pointers[i].percent);\n    }\n  };\n\n  /**\n   * on component init, min and max should be initialized together\n   * because their validations depend on each other;\n   */\n  const setMinMax = (_min: number | string | undefined | null, _max: number | string | undefined | null) => {\n\n    min = data !== undefined ? 0 : getNumber(_min, MIN_DEFAULT);\n    max = data !== undefined ? data.length - 1 : getNumber(_max, MAX_DEFAULT);\n\n    // perform validations\n    setMin(min);\n    setMax(max);\n  };\n\n  const setAriaMinMax = () => {\n    for(let i=0; i<pointers.length; i++){\n      const pointer = pointers[i];\n      pointer.setAttr('aria-valuemin', (getPointerMin(i) ?? '').toString());\n      pointer.setAttr('aria-valuemax', (getPointerMax(i) ?? '').toString());\n    }\n  };\n\n  const setMin = (_min: number | string | undefined | null) => {\n    min = getNumber(_min, MIN_DEFAULT);\n\n    if(min > max){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setMax = (_max: number | string | undefined | null) => {\n\n    max = getNumber(_max, MAX_DEFAULT);\n\n    if(max < min){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setValues = (values: (number | string | undefined)[]) => {\n\n    // initial values should be initialized together\n    // because their validations may depend on each other;\n\n    // init initial values with pointers overlap ----------\n    pointersOverlap = true;\n\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n\n    pointersOverlap = false;\n\n    // add all required validations ------------------------\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n  };\n\n  const setValue = (_val: number | string | undefined | null, index: number) => {\n\n    let val: number;\n\n    if(data !== undefined){\n\n      val = (_val === undefined || _val === null) ? 0 : findValueIndexInData(_val, data);\n      if(val === -1){\n        val = 0;\n      }\n    }\n    else{\n      val = getNumber(_val, min);\n\n      if(val < min){\n        val = min;\n      }\n\n      if(val > max){\n        val = max;\n      }\n    }\n\n    // scale a range [min,max] to [a,b]\n    const percent = convertRange(min, max, 0, 100, val);\n\n    setPositions(index, percent);\n  };\n\n  const setStep = (_step: TStep | string) => {\n    if(_step === null || _step === undefined){\n      step = undefined;\n      return;\n    }\n\n    if (typeof _step === 'function') {\n      step = _step;\n      setAllPositions();\n      return;\n    }\n\n    if(isNumber(_step)){\n      step = getNumber(_step, 1);\n\n      const diff = Math.abs(max - min);\n      if (step > diff) {\n        step = undefined;\n      }\n\n      setAllPositions();\n      return;\n    }\n\n    step = undefined;\n  };\n\n  const setPointersOverlap = (_pointersOverlap: boolean) => {\n    pointersOverlap = _pointersOverlap;\n    setAllPositions();\n  };\n\n  const setPointersMinDistance = (_pointersMinDistance: number) => {\n    if(!isNumber(_pointersMinDistance) || _pointersMinDistance < 0){\n      _pointersMinDistance = 0;\n    }\n    pointersMinDistance = _pointersMinDistance;\n  };\n\n  const setPointersMaxDistance = (_pointersMaxDistance: number) => {\n    if(!isNumber(_pointersMaxDistance) || _pointersMaxDistance < 0){\n      _pointersMaxDistance = Infinity;\n    }\n    pointersMaxDistance = _pointersMaxDistance;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $slider.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $slider.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($slider.hasAttribute('aria-disabled')) {\n        $slider.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setKeyboardDisabled = (_disabled: boolean) => {\n    keyboardDisabled = _disabled;\n  };\n\n  const setData = (_data: TData | string | number | null) => {\n\n    if(_data === null || _data === undefined){\n      data = undefined;\n      return;\n    }\n\n    data = parseData(_data as string);\n    if(data === undefined || data.length <= 0){\n      data = undefined;\n      return;\n    }\n\n    setMin(0);\n    setMax(data.length - 1);\n\n    if(step === undefined){\n      setStep(1);\n    }\n  };\n\n  const setType = (_type: string | null | undefined) => {\n\n    if(typeof _type === 'string'){\n      type = _type.trim().toLowerCase() === TypeEnum.Vertical ? TypeEnum.Vertical : TypeEnum.Horizontal;\n    }\n    else{\n      type = TypeEnum.Horizontal;\n    }\n\n    const $box = $component.shadowRoot?.querySelector('.range-slider-box');\n    if(!$box) return;\n    $box.className = `range-slider-box type-${ type }`;\n\n    setAllPositions();\n\n    // update accessibility properties\n    const aria = type === TypeEnum.Vertical ? 'vertical' : 'horizontal';\n    for(const pointer of pointers){\n      pointer.setAttr('aria-orientation', aria);\n    }\n  };\n\n  const setRightToLeft = (_rightToLeft: boolean) => {\n    rightToLeft = _rightToLeft;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, rightToLeft, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setBottomToTop = (_bottomToTop: boolean) => {\n    bottomToTop = _bottomToTop;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, bottomToTop, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setRound = (_round: number) => {\n    round = getNumber(_round, ROUND_DEFAULT);\n\n    if(round < 0){\n      round = ROUND_DEFAULT;\n    }\n\n    updatePlugins();\n  };\n\n  const setAnimateOnClick = (_animateOnClick: string | boolean | null | undefined) => {\n    if(_animateOnClick === null ||\n      _animateOnClick === undefined ||\n      _animateOnClick.toString().trim().toLowerCase() === 'false'){\n      animateOnClick = undefined;\n      $slider.style.removeProperty(CSSVariables.AnimateOnClick);\n      $slider.classList.remove(CssClasses.AnimateOnClick);\n    }\n    else{\n      animateOnClick = _animateOnClick.toString();\n      $slider.style.setProperty(CSSVariables.AnimateOnClick, animateOnClick);\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n  };\n\n  const setAriaLabel = (index: number, _ariaLabel: string | undefined) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.setAttr('aria-label', _ariaLabel);\n    ariaLabels[index] = _ariaLabel;\n  };\n\n  const setRangeDragging = (_rangeDragging: boolean) => {\n    rangeDraggingStart = undefined;\n\n    if(pointers.length <= 1){\n      rangeDragging = false;\n      $slider.classList.remove(CssClasses.RangeDragging);\n      return;\n    }\n\n    rangeDragging = _rangeDragging;\n    $slider.classList.toggle(CssClasses.RangeDragging, rangeDragging);\n  };\n\n  // initialization -------------------------------------\n\n  const initDisabled = () => {\n    setDisabled(getBoolean($component.getAttribute(AttributesEnum.Disabled)));\n    keyboardDisabled = getBoolean($component.getAttribute(AttributesEnum.KeyboardDisabled))\n\n    // handle 'pointer1-disabled, pointer2-disabled, etc.\n    const disabledList = getAttributesByRegex($component, /^pointer([0-9]*)-disabled$/, (val: string) => {\n      return getBoolean(val);\n    });\n\n    for(const item of disabledList){\n      const pointerIndex = item[0];\n      if(!pointers[pointerIndex]) continue;\n      pointers[pointerIndex].disabled = item[1];\n    }\n  };\n\n  const initAriaLabels = () => {\n    // handle 'aria-label1', 'aria-label2', etc.\n    const ariaLabelsList = getAttributesByRegex($component, /^aria-label([0-9]*)$/);\n\n    for(const item of ariaLabelsList){\n      const index = item[0];\n      setAriaLabel(index, item[1] as string);\n    }\n  };\n\n  // add pointer - always to the end\n  const addPointer = (value: string | number | undefined) => {\n    const len = pointers.length;\n    const $latestPointer = pointers[len - 1].$pointer;\n\n    const $newPointer = $latestPointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n    const newPointer = Pointer($component, $newPointer, len);\n\n    newPointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointers.push(newPointer);\n\n    setValue(value, len);\n    setAllPositions();\n    updatePlugins();\n\n    return len;\n  };\n\n  // always from the end\n  const removePointer = () => {\n    const len = pointers.length;\n    const pointer = pointers[len - 1];\n    if(!pointer) return -1;\n\n    pointer.destroy();\n    pointers.pop();\n\n    if(pointers.length <= 1){\n      setRangeDragging(false);\n    }\n\n    setAllPositions();\n    updatePlugins();\n\n    return len - 1;\n  };\n\n  (() => {\n\n    // init pointer callbacks for arrow keys\n    for(const pointer of pointers){\n      pointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    }\n\n    // init panel fill\n    const $fill = $component.shadowRoot?.querySelector('.panel-fill') as HTMLElement;\n    if($fill){\n      panelFill = PanelFill($fill);\n    }\n\n    // init main properties from HTML attributes\n    setType($component.getAttribute(AttributesEnum.Type));\n    setRightToLeft(getBoolean($component.getAttribute(AttributesEnum.RightToLeft)));\n    setBottomToTop(getBoolean($component.getAttribute(AttributesEnum.BottomToTop)));\n\n    setMinMax($component.getAttribute(AttributesEnum.Min), $component.getAttribute(AttributesEnum.Max));\n    setStep($component.getAttribute(AttributesEnum.Step));\n    setData($component.getAttribute(AttributesEnum.Data));\n\n    // set value and render the pointers ----------------------\n    setValues(pointersList.map(item => item[1]));\n\n    // overlaps MUST be defined after the pointer values\n    setPointersOverlap(getBoolean($component.getAttribute(AttributesEnum.PointersOverlap)));\n    setPointersMinDistance(getNumber($component.getAttribute(AttributesEnum.PointersMinDistance), 0));\n    setPointersMaxDistance(getNumber($component.getAttribute(AttributesEnum.PointersMaxDistance), Infinity));\n    setRangeDragging(getBoolean($component.getAttribute(AttributesEnum.RangeDragging)));\n\n    // additional properties -----------------------------\n    setRound(getNumber($component.getAttribute(AttributesEnum.Round), ROUND_DEFAULT));\n    initDisabled();\n    initAriaLabels();\n\n    // init styles ---------\n    styles = Styles($component, $slider, pointers);\n    setAnimateOnClick($component.getAttribute(AttributesEnum.AnimateOnClick) ?? ANIMATE_ON_CLICK_DEFAULT);\n\n    // init slider events -------------------------------------\n    $slider.addEventListener('mousedown', onMouseDown);\n    $slider.addEventListener('mouseup', onMouseUp);\n    $slider.addEventListener('touchmove', onValueChange);\n    $slider.addEventListener('touchstart', onValueChange);\n    document.addEventListener('wheel', pointerMouseWheel, { passive: false });\n\n    // init plugins ---------------\n    pluginsManager = PluginsManager(\n      $component,\n      requestUpdatePlugins,\n      {\n        setValues,\n        setMin,\n        setMax,\n        setStep,\n        setPointersOverlap,\n        setPointersMinDistance,\n        setPointersMaxDistance,\n        setDisabled,\n        setType,\n        setRightToLeft,\n        setBottomToTop,\n        setRound,\n        setKeyboardDisabled,\n        setRangeDragging,\n        setData,\n      },\n      {\n        getPercents,\n        getValues,\n        getPointerElements,\n\n        getMin: getNumericMin,\n        getMax: getNumericMax,\n\n        getStep,\n        getData,\n        getType,\n        getRound,\n\n        getTextMin: getMin,\n        getTextMax: getMax,\n\n        isRightToLeft,\n        isBottomToTop,\n\n        isDisabled,\n        isKeyboardDisabled,\n\n        isPointersOverlap,\n        isRangeDraggingEnabled,\n        getPointersMinDistance,\n        getPointersMaxDistance,\n      }\n    );\n    pluginsManager.init();\n  })();\n\n  const destroy = () => {\n    $slider.removeEventListener('mousedown', onMouseDown);\n    $slider.removeEventListener('mouseup', onMouseUp);\n    $slider.removeEventListener('touchmove', onValueChange);\n    $slider.removeEventListener('touchstart', onValueChange);\n    document.removeEventListener('wheel', pointerMouseWheel);\n\n    for(const pointer of pointers){\n      pointer.destroy();\n    }\n\n    pluginsManager?.destroy();\n  };\n\n  return {\n    get pointers() {\n      return pointers;\n    },\n\n    get styles() {\n      return styles;\n    },\n\n    get pluginsManager() {\n      return pluginsManager;\n    },\n\n    get min() {\n      return getMin();\n    },\n\n    get max() {\n      return getMax();\n    },\n\n    get step() {\n      return getStep();\n    },\n\n    get pointersOverlap() {\n      return isPointersOverlap();\n    },\n\n    set pointersOverlap(_pointersOverlap) {\n      setPointersOverlap(_pointersOverlap);\n    },\n\n    get pointersMinDistance() {\n      return getPointersMinDistance();\n    },\n\n    set pointersMinDistance(_pointersMinDistance) {\n      setPointersMinDistance(_pointersMinDistance);\n    },\n\n    get pointersMaxDistance() {\n      return getPointersMaxDistance();\n    },\n\n    set pointersMaxDistance(_pointersMaxDistance) {\n      setPointersMaxDistance(_pointersMaxDistance);\n    },\n\n    get disabled() {\n      return isDisabled();\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    get data() {\n      return getData();\n    },\n\n    get type() {\n      return getType();\n    },\n\n    set type(_type) {\n      setType(_type);\n    },\n\n    get rightToLeft() {\n      return isRightToLeft();\n    },\n\n    set rightToLeft(_rightToLeft) {\n      setRightToLeft(_rightToLeft);\n    },\n\n    get bottomToTop() {\n      return isBottomToTop();\n    },\n\n    set bottomToTop(_bottomToTop) {\n      setBottomToTop(_bottomToTop);\n    },\n\n    get round() {\n      return getRound();\n    },\n\n    set round(_round) {\n      setRound(_round);\n    },\n\n    get animateOnClick() {\n      return animateOnClick;\n    },\n\n    set animateOnClick(_animateOnClick) {\n      setAnimateOnClick(_animateOnClick);\n    },\n\n    get keyboardDisabled() {\n      return isKeyboardDisabled();\n    },\n\n    set keyboardDisabled(_keyboardDisabled){\n      setKeyboardDisabled(_keyboardDisabled);\n    },\n\n    get rangeDragging() {\n      return isRangeDraggingEnabled();\n    },\n\n    set rangeDragging(_rangeDragging) {\n      setRangeDragging(_rangeDragging);\n    },\n\n    setMin,\n    setMax,\n    setValue,\n    setStep,\n    setData,\n    getTextValue,\n    setAriaLabel,\n    getAriaLabel,\n\n    addPointer,\n    removePointer,\n\n    destroy,\n  };\n};\n\n","import * as AttributesEnum from '../enums/attributes-enum';\nimport { ISlider, ROUND_DEFAULT } from '../ui/slider';\nimport { getBoolean, getNumber } from './math-provider';\nimport { stylePropertiesList } from '../ui/styles';\n\nexport const onAttributeChange = (slider: ISlider, attrName: string, newValue: string) => {\n\n  // handle style properties ------------------------------------\n  // try to get style property - ['--pointer-width', 'pointer-width', 1, 'pointerWidth']\n  const found = stylePropertiesList.find(([_cssVariableName, _attrName, _apiProperty, _regex]) => {\n    return _attrName.replace('#', '') === attrName.replace(/\\d+/g, '');\n  });\n\n  if(found && slider.styles){\n    const [_cssVariableName, _attrName, _apiProperty, _regex] = found;\n\n    const key = attrName.replace(/\\D/g, '').trim();\n    const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n\n    slider.styles.setStyle(_cssVariableName, newValue, index);\n    return;\n  }\n\n  if(slider && slider.pluginsManager){\n    slider.pluginsManager.onAttrChange(attrName, newValue);\n  }\n\n  // handle static properties ----------------------------------\n  switch (attrName) {\n\n    case AttributesEnum.Min: {\n      slider.setMin(newValue);\n      break;\n    }\n\n    case AttributesEnum.Max: {\n      slider.setMax(newValue);\n      break;\n    }\n\n    case AttributesEnum.Step: {\n      slider.setStep(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersOverlap: {\n      slider.pointersOverlap = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMinDistance: {\n      slider.pointersMinDistance = getNumber(newValue, 0);\n      break;\n    }\n\n    case AttributesEnum.RangeDragging: {\n      slider.rangeDragging = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMaxDistance: {\n      slider.pointersMaxDistance = getNumber(newValue, Infinity);\n      break;\n    }\n\n    case AttributesEnum.Disabled: {\n      slider.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.KeyboardDisabled: {\n      slider.keyboardDisabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Data: {\n      slider.setData(newValue);\n      break;\n    }\n\n    case AttributesEnum.Type: {\n      slider.type = newValue;\n      break;\n    }\n\n    case AttributesEnum.RightToLeft: {\n      slider.rightToLeft = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.BottomToTop: {\n      slider.bottomToTop = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Round: {\n      slider.round = getNumber(newValue, ROUND_DEFAULT);\n      break;\n    }\n\n    case AttributesEnum.Theme: {\n      if(slider.styles){\n        slider.styles.theme = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.AnimateOnClick: {\n      slider.animateOnClick = newValue;\n      break;\n    }\n  }\n\n  // handle dynamic properties ------------------------------------\n  let property: string | null = null;\n\n  if(/^value([0-9]*)$/.test(attrName)){\n    property = 'value';\n  }\n\n  if(/^pointer([0-9]*)-disabled$/.test(attrName)){\n    property = 'pointer-disabled';\n  }\n\n  if(/^aria-label([0-9]*)$/.test(attrName)){\n    property = 'aria-label';\n  }\n\n  if(/^pointer([0-9]*)-shape$/.test(attrName)){\n    property = 'pointer-shape';\n  }\n\n  if(!property) return;\n\n  const key = attrName.replace(/\\D/g, '').trim();\n  const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1)\n\n  switch (property) {\n\n    case 'value': {\n      slider.setValue(newValue, index);\n      break;\n    }\n\n    case 'pointer-disabled': {\n      const pointer = slider?.pointers[index];\n      if(!pointer) return;\n\n      pointer.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case 'aria-label': {\n      slider.setAriaLabel(index, newValue);\n      break;\n    }\n\n    case 'pointer-shape': {\n      if(slider.styles){\n        slider.styles.setPointerShape(index, newValue);\n      }\n      break;\n    }\n  }\n};","import mainTemplate from '../templates/main.html.js'; // esbuild custom loader\nimport styles from './styles.pcss';\nimport { onAttributeChange } from '../domain/attributes-provider';\nimport { ISlider, ROUND_DEFAULT, Slider } from '../ui/slider';\nimport { TData, TStep } from '../types';\nimport { getBoolean } from '../domain/math-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { getExternalCSSList } from '../domain/common-provider';\nimport { initPointerAPI, initPointerAPIs, initPointers } from '../domain/pointers-provider';\n\n/**\n * Usage: <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n * Documentation: https://github.com/toolcool-org/toolcool-range-slider\n */\nclass TCRangeSlider extends HTMLElement {\n\n  public slider: ISlider | undefined;\n\n  private _externalCSSList: string[] | null = [];\n\n  private _observer: MutationObserver | null = null;\n\n  // -------------- APIs --------------------\n\n  public set step(_step: TStep) {\n    if(this.slider){\n      this.slider.setStep(_step);\n    }\n  }\n\n  public get step() {\n    return this.slider?.step;\n  }\n\n  public set disabled(_disabled: boolean) {\n    if(this.slider){\n      this.slider.disabled = _disabled;\n    }\n  }\n\n  public get disabled() {\n    return this.slider?.disabled ?? false;\n  }\n\n  public set data(_data: TData) {\n    this.slider?.setData(_data);\n  }\n\n  public get data() {\n    return this.slider?.data;\n  }\n\n  public set min(_min: number | string | undefined | null) {\n    this.slider?.setMin(_min);\n  }\n\n  public get min() {\n    return this.slider?.min;\n  }\n\n  public set max(_max: number | string | undefined | null) {\n    this.slider?.setMax(_max);\n  }\n\n  public get max() {\n    return this.slider?.max;\n  }\n\n  public set round(_round: number) {\n    if(!this.slider) return;\n    this.slider.round = _round;\n  }\n\n  public get round() {\n    return this.slider?.round ?? ROUND_DEFAULT;\n  }\n\n  public set type(_type: string | undefined) {\n    if(!this.slider) return;\n    this.slider.type = _type ?? TypeEnum.Horizontal;\n  }\n\n  public get type() {\n    return this.slider?.type || TypeEnum.Horizontal;\n  }\n\n  public set pointersOverlap(_pointersOverlap: boolean) {\n    if(!this.slider) return;\n    this.slider.pointersOverlap = _pointersOverlap;\n  }\n\n  public get pointersOverlap() {\n    return this.slider?.pointersOverlap ?? false;\n  }\n\n  public set pointersMinDistance(_pointersMinDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMinDistance = _pointersMinDistance;\n  }\n\n  public get pointersMinDistance() {\n    return this.slider?.pointersMinDistance ?? 0;\n  }\n\n  public set pointersMaxDistance(_pointersMaxDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMaxDistance = _pointersMaxDistance;\n  }\n\n  public get pointersMaxDistance() {\n    return this.slider?.pointersMaxDistance ?? Infinity;\n  }\n\n  public set theme(_theme: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.theme = _theme;\n  }\n\n  public get theme() {\n    return this.slider?.styles?.theme ?? null;\n  }\n\n  public set rtl(_rtl: boolean) {\n    if(!this.slider) return;\n    this.slider.rightToLeft = _rtl;\n  }\n\n  public get rtl() {\n    return this.slider?.rightToLeft ?? false;\n  }\n\n  public set btt(_btt: boolean) {\n    if(!this.slider) return;\n    this.slider.bottomToTop = _btt;\n  }\n\n  public get btt() {\n    return this.slider?.bottomToTop ?? false;\n  }\n\n  public set keyboardDisabled(_keyboardDisabled: boolean) {\n    if(!this.slider) return;\n    this.slider.keyboardDisabled = _keyboardDisabled;\n  }\n\n  public get keyboardDisabled() {\n    return this.slider?.keyboardDisabled ?? false;\n  }\n\n  public set animateOnClick(_animateOnClick: string | boolean | undefined) {\n    if(!this.slider) return;\n    this.slider.animateOnClick = _animateOnClick;\n  }\n\n  public get animateOnClick() {\n    return this.slider?.animateOnClick;\n  }\n\n  public get rangeDragging(){\n    return this.slider?.rangeDragging ?? false;\n  }\n\n  public set rangeDragging(_rangeDragging: boolean | string | undefined | null) {\n    if(this.slider){\n      this.slider.rangeDragging = getBoolean(_rangeDragging);\n    }\n  }\n\n  public get externalCSSList() {\n    return this._externalCSSList;\n  }\n\n  public addPointer(value: number | string | undefined) {\n    if(!this.slider) return;\n\n    const index = this.slider?.addPointer(value);\n\n    initPointerAPI(this,\n      this.slider,\n      index,\n      `value${ index + 1 }`,\n      `ariaLabel${ index + 1 }`,\n      `pointerShape${ index + 1 }`,\n      `pointer${ index + 1 }Disabled`\n    );\n  }\n\n  public removePointer() {\n    if(!this.slider) return;\n    this.slider?.removePointer();\n  }\n\n  public addCSS(css: string) {\n    if(!this.shadowRoot) return;\n\n    const sheet = document.createElement('style')\n    sheet.textContent = css;\n    this.shadowRoot.appendChild(sheet);\n  }\n\n  // ----------------------------------------------\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // get optional external CSS list\n    this._externalCSSList = getExternalCSSList(this);\n    this.shadowRoot.innerHTML = mainTemplate(styles, this._externalCSSList);\n\n    // init first pointer\n    const $pointer = this.shadowRoot?.querySelector('.pointer') as HTMLElement;\n    if(!$pointer) return;\n\n    // init the slider\n    const $slider = this.shadowRoot?.getElementById('range-slider') as HTMLElement;\n    if(!$slider) return;\n\n    const pointers = initPointers(this, $pointer);\n    this.slider = Slider(this, $slider, pointers);\n\n    initPointerAPIs(this, this.slider);\n\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (!this.slider || mutation.type !== 'attributes') return;\n\n        const attrName = mutation.attributeName;\n        if(!attrName) return;\n\n        onAttributeChange(this.slider, attrName, this.getAttribute(attrName) ?? '');\n      });\n    });\n\n    this._observer.observe(this, {\n      attributes: true, //configure it to listen to attribute changes\n    });\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    if(this._observer){\n      this._observer.disconnect();\n    }\n\n    if(!this.slider) return\n\n    this.slider.destroy();\n  }\n}\n\nexport default TCRangeSlider;\n","import TCRangeSlider from './app/range-slider';\nimport { DynamicFields } from './types';\n\ntype RangeSlider = TCRangeSlider & HTMLElement & DynamicFields;\n\ndeclare global {\n  interface Window {\n    tcRangeSlider: typeof TCRangeSlider;\n  }\n}\n\nwindow.tcRangeSlider = TCRangeSlider;\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', TCRangeSlider);\n}\n\nif (!customElements.get('tc-range-slider')) {\n  customElements.define('tc-range-slider', class extends TCRangeSlider{});\n}\n\nexport default RangeSlider;\n\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('aNMIV') + \"slider.d9fb2dd3.css\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":["CindyJS","$17819f3fe548e987$var$equidistantNodes","degree","Array","fill","map","_","i","$17819f3fe548e987$var$chebyshev01","k","n","Math","cos","PI","$17819f3fe548e987$var$chebyshev","$17819f3fe548e987$var$chebyshevNodes","$17819f3fe548e987$export$2e2bcd8739ae039","minDegree","maxDegree","nodeGenerator","constructor","nodeGeneratorEquidistant","Number","POSITIVE_INFINITY","this","max","getMinDegree","getMaxDegree","generateNodes","clampedDegree","min","nodes","length","push","static","$6f3f0fa0e8f48050$export$2e2bcd8739ae039","lights","direction","color","gamma","cameraSpace","getLights","$9f68392927753aad$var$csInit","$parcel$interopDefault","$9f68392927753aad$var$cdyInstanceDataMap","Map","registerPlugin","api","cdy","instance","cdyData","get","Error","onInit","defineFunction","$9f68392927753aad$export$2e2bcd8739ae039","element","canvas","intersectionAlgorithm","illumnimationModel","expression","twoSided","alpha","zoom","parameters","interpolationNodeGenerator","nodeGeneratorChebyshev","defineCindyScriptFunctions","setIntersectionAlgorithm","setIlluminationModel","setExpression","setTwoSided","setAlpha","setZoom","Object","entries","forEach","name","value","setParameter","toCSTypeListOfNumbers","a","ctype","e","real","imag","toCSTypeListOfListOfNumbers","aa","args","evaluateAndVal","getIntersectionAlgorithm","defineGetInterpolationNodes","getIlluminationModel","filter","defineGetIlluminationData","getExpression","getTwoSided","getAlpha","getZoom","getParameter","getParameters","getParameterNames","keys","evokeCS","hasTwoSides","algorithm","model","container","width","height","ownerDocument","createElement","appendChild","newInstance","scripts","init","draw","mousedown","mouseup","animation","autoplay","use","ports","transform","visibleRect","Promise","resolve","set","parentElement","ResizeObserver","aspectRatio","observe","surferCoreGpu","startup","$a7bbba3cb0f1438e$export$2e2bcd8739ae039","main_html_default","styles","linkHrefs","linkHref","PointersOverlap","PointersMinDistance","PointersMaxDistance","RangeDragging","Data","Min","Max","Step","Round","Type","Theme","RightToLeft","BottomToTop","Disabled","KeyboardDisabled","SliderWidth","SliderHeight","SliderRadius","SliderBg","SliderBgHover","SliderBgFill","PointerWidth","PointerHeight","PointerRadius","PointerBg","PointerBgHover","PointerBgFocus","PointerShadow","PointerShadowHover","PointerShadowFocus","PointerBorder","PointerBorderHover","PointerBorderFocus","AnimateOnClick","CSSLinks","Vertical","Horizontal","convertRange","b","x","temp","isNumber","input","getNumber","defaultValue","roundToStep","num","step","setDecimalPlaces","decimalPlaces","coeff","__pow","getBoolean","val","sendPointerClickedEvent","$component","$pointer","sendMouseDownEvent","evt","sendMouseUpEvent","sendOnKeyDownEvent","sendChangeEvent","values","transformed","detail","Pointer","index","percent","arrowLeft","arrowRight","arrowUp","arrowDown","disabled","updatePosition","_percent","_leftWall","_rightWall","_type","_rightToLeft","_bottomToTop","percentPos","isClicked","$target","setCallbacks","_arrowLeft","_arrowRight","_arrowUp","_arrowDown","setDisabled","_disabled","setAttr","key","getAttr","pointerKeyDown","pointerClicked","parseData","dataString","parts","list","allValuesAreNumbers","part","item","findValueIndexInData","data","PanelFill","$fill","type","percents","rightToLeft","bottomToTop","oneOnly","first","last","getAttributesByRegex","regex","parseValue","attr","valueProp","keyNum","getExternalCSSList","str","cssList","stylePropertiesList","Styles","$slider","pointers","theme","pointerShapes","stylesMap","removeClassesStartWith","prefix","$element","classList","className","removeClasses","$pointers","setTheme","updatePointerShapes","setPointerShape","setPointerShapes","getKey","setStyle","pointer","$styleHolder","getStyle","cssVariableName","attrName","apiProperty","cssVariableValue","apiProperties","propName","ex","PluginsManager","requestUpdatePlugins","setters","getters","plugins","update","plugin","destroy","onAttrChange","_attrName","_newValue","defineSettersGetters","initStyles","_a","$style","pluginFunc","MAX_VALUES_API","initPointers","$latestPointer","$newPointer","initPointerAPI","slider","ariaLabelProp","pointerShapeProp","pointerDisabledProp","_b","initPointerAPIs","changePointersOrder","isDesc","$container","MIN_DEFAULT","MAX_DEFAULT","ROUND_DEFAULT","ANIMATE_ON_CLICK_DEFAULT","Slider","pointersList","selectedPointer","panelFill","pluginsManager","round","pointersOverlap","pointersMinDistance","pointersMaxDistance","rangeDragging","rangeDraggingStart","rangeDraggingDiff","keyboardDisabled","animateOnClick","ariaLabels","onMouseDown","onValueChange","onMouseUp","getActivePointer","panelFillClicked","isPanelFillClicked","_dragPercent","stepPercent","getStepPercent","isPanelClicked","minDistance","minDistancePointer","distance","getSelectedPointerIndex","boxHeight","boxTop","mouseY","boxWidth","boxLeft","mouseX","firstPointer","lastPointer","firstSmallerThanMin","lastGreaterThanMax","setPositions","foundIndex","pointerMouseWheel","scrollTop","rightOrBottom","shouldGoPrev","goPrev","goNext","pointerIndex","updatePlugins","getPercents","getValues","getPointerElements","getNumericMin","getNumericMax","getData","getStep","getRound","getType","getMin","getMax","isRightToLeft","isBottomToTop","isPointersOverlap","getPointersMinDistance","getPointersMaxDistance","isRangeDraggingEnabled","isDisabled","isKeyboardDisabled","getPointerLeftWall","converted","getPointerRightWall","_step","currentValue","diff","getTextValue","getPointerMin","getPointerMax","getAriaLabel","valueText","setAriaMinMax","setAllPositions","setMinMax","_min","_max","setMin","setMax","setValues","setValue","_val","setStep","setPointersOverlap","_pointersOverlap","setPointersMinDistance","_pointersMinDistance","setPointersMaxDistance","_pointersMaxDistance","setKeyboardDisabled","setData","_data","setType","$box","aria","setRightToLeft","setBottomToTop","setRound","_round","setAnimateOnClick","_animateOnClick","setAriaLabel","_ariaLabel","setRangeDragging","_rangeDragging","initDisabled","disabledList","initAriaLabels","ariaLabelsList","addPointer","len","newPointer","removePointer","_keyboardDisabled","onAttributeChange","newValue","found","_cssVariableName","_apiProperty","_regex","property","TCRangeSlider","__publicField","_theme","_c","_rtl","_btt","css","sheet","styles_default","mutations","mutation","range_slider_default"],"version":3,"file":"index.b7a05eb9.js.map","sourceRoot":"/__parcel_source_root/"}