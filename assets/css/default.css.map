{"version":3,"file":"default.css","sources":["default.scss","common/_colors.scss","common/_fonts.scss","common/_util_responsive.scss","common/_base.scss","index/_mod_layout.scss","index/_mod_info.scss","index/_mod_modal.scss"],"sourcesContent":["@import \"common/colors\";\n@import \"common/fonts\";\n@import \"common/util_responsive\";\n@import \"common/base\";\n\n@import \"index/mod_layout\";\n@import \"index/mod_info\";\n@import \"index/mod_modal\";","$color-pink-light: #ffdbeb;\n$color-pink: #e7728c;\n$color-pink-wild: #e80068;\n$color-red-dark: #89241c;\n\n$color-gray: #ddd;","$font-stack-ubuntu: Ubuntu, \"Trebuchet MS\", Helvetica, Arial, sans-serif;\n\n@mixin ubuntu {\n  font-family: $font-stack-ubuntu;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: normal;\n}\n\n@mixin ubuntuBold {\n  font-family: $font-stack-ubuntu;\n  font-weight: bold;\n  font-style: normal;\n  letter-spacing: normal;\n}\n","// Grid breakpoints\n//\n// Define the minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries.\n\n\n$grid-breakpoints: (\n    xs: 0,\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px\n) !default;\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$container-max-widths: (\n    sm: 540px,\n    md: 720px,\n    lg: 960px,\n    xl: 1140px\n) !default;\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","body {\n  background-color: $color-pink;\n}\n\n.boxed {\n  background-color: $color-pink-light;\n  padding: 0.5em;\n  margin: 0.5em 0;\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n}","html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n.viz-wrapper {\n  width: 100%;\n  height: 100%;\n  padding-bottom: 100px;\n  @include media-breakpoint-between(xs, md) {\n    padding-top: 100px;\n  }\n}\n\n.cindy-viewer {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n\n.input-wrapper {\n  position: absolute;\n  bottom: 20px;\n  width: 100%;\n  z-index: 100;\n  text-align: center;\n}\n\n#input-field {\n  display: inline-block;\n  width: 638px;\n  background-color: transparent;\n  margin: 0 auto;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 28px;\n  letter-spacing: 1px;\n  color: $color-red-dark;\n  border: 1px dashed $color-red-dark;\n  padding: 14px 5px;\n  text-align: center;\n\n  &:focus {\n    outline: none;\n    border-color: #ffffff;\n  }\n\n  &:hover {\n    border-color: #ffffff;\n  }\n}\n\n#redraw-button {\n  display: inline-block;\n  line-height: 2.3em;\n  font-size: 20px;\n  margin: 0;\n  vertical-align: middle;\n  margin-left: 0.3em;\n  @include ubuntu;\n  background-color: rgba(255, 255, 255, 0.3);\n  border: 1px solid $color-red-dark;\n  color: $color-red-dark;\n  padding: 0 0.8em;\n}",".logo-imaginary {\n   display: block;\n   width: 200px;\n   height: 24px;\n   position: absolute;\n   top: 20px;\n   left: 20px;\n   z-index: 100;\n   background-image: url('../img/imaginary-logo-white.png');\n   background-size: contain;\n   background-position: center center;\n   background-repeat: no-repeat;\n }\n\n.credits-home {\n  display: block;\n  width: 200px;\n  height: auto;\n  position: absolute;\n  top: 50px;\n  left: 20px;\n  z-index: 100;\n  font-size: 13px;\n  color: #ffffff;\n  opacity: 0.7;\n  @include ubuntu;\n  &:hover {\n    color: #ffffff;\n    text-decoration: none;\n    opacity: 1;\n  }\n}\n\n\n.icon-info {\n  display: block;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  z-index: 100;\n  background-image: url('../img/info-circle-solid.svg');\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n.info-formula {\n  display: inline-block;\n  padding: 0.1em 0.3em;\n  background-color: $color-gray;\n  font-size: 13px;\n}",".modal-content {\n  box-shadow: 0 0 30px -6px rgba(0, 0, 0, 1);\n  border: none;\n  border-radius: 0;\n}\n\n.modal-backdrop.show {\n  opacity: 0.2;\n}\n\n.modal-body {\n  padding: 2rem 5rem;\n  @include ubuntu;\n  b, strong {\n    @include ubuntuBold;\n  }\n\n  a {\n    color: $color-pink-wild;\n  }\n\n  button.close {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n  }\n\n  @include media-breakpoint-down(md) {\n    padding: 2rem 1rem;\n  }\n}\n"],"mappings":"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","names":[]}